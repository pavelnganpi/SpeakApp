{"_id":"grunt-nodemon","_rev":"33-42a7579a00646807a74a174cc9576b9f","name":"grunt-nodemon","description":"Grunt task to run a nodemon monitor of your node.js server","dist-tags":{"latest":"0.1.2"},"versions":{"0.0.0":{"name":"grunt-nodemon","version":"0.0.0","description":"Grunt task to run a nodemon monitor of your node.js server","main":"test/server.js","scripts":{"test":"grunt test"},"repository":{"type":"git","url":"https://github.com/ChrisWren/grunt-nodemon.git"},"keywords":["gruntplugin","nodemon","server"],"author":{"name":"Chris Wren"},"license":"MIT","devDependencies":{"grunt":"~0.4.1"},"readme":"# grunt-nodemon\n\nRun [nodemon](https://github.com/remy/nodemon) as a grunt task for easy configuration and integration with the rest of your workflow.\n\n## Getting Started\nIf you haven't used grunt before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a gruntfile as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n```shell\nnpm install grunt-nodemon --save-dev\n```\n\nThen add this line to your project's `Gruntfile.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-nodemon');\n```\n\n## Documentation\n\n### Dependencies\nThe only non-grunt dependency of grunt-nodemon is the nodemon module. If you don't have nodemon installed, install it globally with this command:\n\n```shell\nnpm install nodemon -g\n```\n\n### Usage\nThe minimal usage of nodemon runs with no options:\n```js\nnodemon: {\n    dev: {}\n  }\n```\nWhen this is run, nodemon will look at the `package.json` file for the `main` property and run its value as a command in node.\n\nHere is a config that uses all of the available options for nodemon:\n\n```js\nnodemon: {\n    prod: {\n      options: {\n        file: 'test/server.js',\n        args: ['production'],\n        ignoredFiles: ['README.md', 'node_modules/**'],\n        watchedExtensions: ['js', 'coffee'],\n        watchedFolders: ['test', 'tasks'],\n        debug: true,\n        delayTime: 1\n      }\n    },\n    exec: {\n      options: {\n        exec: 'less'\n      }\n    }\n  }\n```\n### Options\n\n#### file\nType: `string`\n\nThis is file that nodemon runs and restarts when changes are detected.\n\n### args\nType: `Array` of `strings`\n\nThis is the list of arguments to be passed to your file.\n\n### ignoredFiles\nType: `Array` of `string globs`\n\nThis is a list of ignored files specified by a glob pattern. [Here](https://github.com/remy/nodemon#ignoring-files) is an explanation of how to use the patterns to ignore files. This task will create a `.nodemonignore` file in your repo based on these settings which nodemon reads when it starts.\n\n### watchedExtensions\nType: `Array` of `strings` Default: `'js'`\n\nThis is a list of file extensions to watch for changes. By default nodemon only watches JavaScript files.\n\n### watchedFolders\nType: `Array` of `strings` Default: `'.'`\n\nList of folders to watch for changes if you don't want to watch the root folder and its subdirectories.\n\n### debug\nType: `Boolean`\n\nOptionally launch the node.js debug server.\n\n### delayTime\nType: `Number`\n\nDelay the restart of nodemon by a number of seconds when compiling a large amount of files so that the app doesn't needlessly restart after each file.\n\n### exec\nType: `string`\n\nYou can use nodemon to execute a command outside of node. Use this option to specify a command as a string with the argument being the file parameter above. You can read more on exec [here](https://github.com/remy/nodemon#running-non-node-scripts).\n\n","_id":"grunt-nodemon@0.0.0","dist":{"shasum":"59beaec54546f11e3b9cda010bdd0dfaf923b37c","tarball":"http://registry.npmjs.org/grunt-nodemon/-/grunt-nodemon-0.0.0.tgz"},"_npmVersion":"1.1.59","_npmUser":{"name":"chriswren","email":"chris@chrisawren.com"},"maintainers":[{"name":"chriswren","email":"chris@chrisawren.com"}],"directories":{}},"0.0.1":{"name":"grunt-nodemon","version":"0.0.1","description":"Grunt task to run a nodemon monitor of your node.js server","main":"test/server.js","scripts":{"test":"grunt nodemon & sleep 5s;"},"repository":{"type":"git","url":"https://github.com/ChrisWren/grunt-nodemon.git"},"keywords":["gruntplugin","nodemon","server"],"author":{"name":"Chris Wren"},"license":"MIT","peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"grunt":"~0.4.1"},"readme":"# grunt-nodemon\n\n> Run [nodemon](https://github.com/remy/nodemon) as a grunt task for easy configuration and integration with the rest of your workflow.\n\n## Getting Started\nIf you haven't used grunt before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a gruntfile as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n```shell\nnpm install grunt-nodemon --save-dev\n```\n\nThen add this line to your project's `Gruntfile.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-nodemon');\n```\n\n## Documentation\n\n### Dependencies\nThe only non-grunt dependency of grunt-nodemon is the nodemon module. If you don't have nodemon installed, install it globally with this command:\n\n```shell\nnpm install nodemon -g\n```\n\n### Usage\nThe minimal usage of nodemon runs with no options:\n```js\nnodemon: {\n  dev: {}\n}\n```\nWhen this is run, nodemon will look at the `package.json` file for the `main` property and run its value as a command in node.\n\nHere is a config that uses all of the available options for nodemon:\n\n```js\nnodemon: {\n  prod: {\n    options: {\n      file: 'test/server.js',\n      args: ['production'],\n      ignoredFiles: ['README.md', 'node_modules/**'],\n      watchedExtensions: ['js', 'coffee'],\n      watchedFolders: ['test', 'tasks'],\n      debug: true,\n      delayTime: 1\n    }\n  },\n  exec: {\n    options: {\n      exec: 'less'\n    }\n  }\n}\n```\n### Options\n\n#### file\nType: `string`\n\nThis is file that nodemon runs and restarts when changes are detected.\n\n### args\nType: `Array` of `strings`\n\nThis is the list of arguments to be passed to your file.\n\n### ignoredFiles\nType: `Array` of `string globs`\n\nThis is a list of ignored files specified by a glob pattern. [Here](https://github.com/remy/nodemon#ignoring-files) is an explanation of how to use the patterns to ignore files. This task will create a `.nodemonignore` file in your repo based on these settings which nodemon reads when it starts.\n\n### watchedExtensions\nType: `Array` of `strings` Default: `'js'`\n\nThis is a list of file extensions to watch for changes. By default nodemon only watches JavaScript files.\n\n### watchedFolders\nType: `Array` of `strings` Default: `'.'`\n\nList of folders to watch for changes if you don't want to watch the root folder and its subdirectories.\n\n### debug\nType: `Boolean`\n\nOptionally launch the node.js debug server.\n\n### delayTime\nType: `Number`\n\nDelay the restart of nodemon by a number of seconds when compiling a large amount of files so that the app doesn't needlessly restart after each file.\n\n### exec\nType: `string`\n\nYou can use nodemon to execute a command outside of node. Use this option to specify a command as a string with the argument being the file parameter above. You can read more on exec [here](https://github.com/remy/nodemon#running-non-node-scripts).\n\n","_id":"grunt-nodemon@0.0.1","dist":{"shasum":"c69b41b9ddf2594e3843f7fb07ec800316531634","tarball":"http://registry.npmjs.org/grunt-nodemon/-/grunt-nodemon-0.0.1.tgz"},"_npmVersion":"1.1.59","_npmUser":{"name":"chriswren","email":"chris@chrisawren.com"},"maintainers":[{"name":"chriswren","email":"chris@chrisawren.com"}],"directories":{}},"0.0.2":{"name":"grunt-nodemon","version":"0.0.2","description":"Grunt task to run a nodemon monitor of your node.js server","main":"test/server.js","scripts":{"test":"grunt nodemon:exec & sleep 1s;kill -9 `pgrep node`; grunt nodemon:prod & sleep 1s; kill -9 `pgrep node`; grunt simplemocha:test1;grunt nodemon:exec & sleep 1s;kill -9 `pgrep node`;grunt simplemocha:test2;"},"repository":{"type":"git","url":"https://github.com/ChrisWren/grunt-nodemon.git"},"keywords":["gruntplugin","nodemon","server"],"author":{"name":"Chris Wren"},"license":"MIT","peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"grunt":"~0.4.1","grunt-simple-mocha":"~0.4.0","should":"~1.2.2"},"readme":"# grunt-nodemon\n[![NPM version](https://badge.fury.io/js/grunt-nodemon.png)](http://badge.fury.io/js/grunt-nodemon)  \n[![Dependency Status](https://gemnasium.com/ChrisWren/grunt-nodemon.png)](https://gemnasium.com/ChrisWren/grunt-nodemon)   \n![Travis Status](https://travis-ci.org/ChrisWren/grunt-nodemon.png)  \n\n> Run [nodemon](https://github.com/remy/nodemon) as a grunt task for easy configuration and integration with the rest of your workflow.\n\n## Getting Started\nIf you haven't used grunt before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a gruntfile as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n```shell\nnpm install grunt-nodemon --save-dev\n```\n\nThen add this line to your project's `Gruntfile.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-nodemon');\n```\n\n## Documentation\n\n### Dependencies\nThe only non-grunt dependency of grunt-nodemon is the nodemon module. If you don't have nodemon installed, install it globally with this command:\n\n```shell\nnpm install nodemon -g\n```\n\n### Usage\nThe minimal usage of nodemon runs with no options:\n```js\nnodemon: {\n  dev: {}\n}\n```\nWhen this is run, nodemon will look at the `package.json` file for the `main` property and run its value as a command in node.\n\nHere is a config that uses all of the available options for nodemon:\n\n```js\nnodemon: {\n  prod: {\n    options: {\n      file: 'test/server.js',\n      args: ['production'],\n      ignoredFiles: ['README.md', 'node_modules/**'],\n      watchedExtensions: ['js', 'coffee'],\n      watchedFolders: ['test', 'tasks'],\n      debug: true,\n      delayTime: 1\n    }\n  },\n  exec: {\n    options: {\n      exec: 'less'\n    }\n  }\n}\n```\n\nA common use case is to run `nodemon` with other tasks concurrently. This can be achieved with the following config, which uses [grunt-concurrent](https://github.com/sindresorhus/grunt-concurrent) to run nodemon and [watch](https://github.com/gruntjs/grunt-contrib-watch) in a single terminal tab: \n```js\nconcurrent: {\n  target: {\n    tasks: ['nodemon', 'watch'],\n    options: {\n      logConcurrentOutput: true\n    }\n}\n```\n### Options\n\n#### file\nType: `string`\n\nThis is file that nodemon runs and restarts when changes are detected.\n\n### args\nType: `Array` of `strings`\n\nThis is the list of arguments to be passed to your file.\n\n### ignoredFiles\nType: `Array` of `string globs`\n\nThis is a list of ignored files specified by a glob pattern. [Here](https://github.com/remy/nodemon#ignoring-files) is an explanation of how to use the patterns to ignore files. This task will create a `.nodemonignore` file in your repo based on these settings which nodemon reads when it starts.\n\n### watchedExtensions\nType: `Array` of `strings` Default: `'js'`\n\nThis is a list of file extensions to watch for changes. By default nodemon only watches JavaScript files.\n\n### watchedFolders\nType: `Array` of `strings` Default: `'.'`\n\nList of folders to watch for changes if you don't want to watch the root folder and its subdirectories.\n\n### debug\nType: `Boolean`\n\nOptionally launch the node.js debug server.\n\n### delayTime\nType: `Number`\n\nDelay the restart of nodemon by a number of seconds when compiling a large amount of files so that the app doesn't needlessly restart after each file.\n\n### exec\nType: `string`\n\nYou can use nodemon to execute a command outside of node. Use this option to specify a command as a string with the argument being the file parameter above. You can read more on exec [here](https://github.com/remy/nodemon#running-non-node-scripts).\n\n# Changelog\n\n**0.0.0** - Initial release\n\n**0.0.1** - Added warning if `nodemon` isn't installed as a global module\n","readmeFilename":"README.md","_id":"grunt-nodemon@0.0.2","dist":{"shasum":"e0effb4f69ae669a60569bf8980d1a3d34b377e7","tarball":"http://registry.npmjs.org/grunt-nodemon/-/grunt-nodemon-0.0.2.tgz"},"_from":".","_npmVersion":"1.2.11","_npmUser":{"name":"chriswren","email":"chris@chrisawren.com"},"maintainers":[{"name":"chriswren","email":"chris@chrisawren.com"}],"directories":{}},"0.0.3":{"name":"grunt-nodemon","version":"0.0.3","description":"Grunt task to run a nodemon monitor of your node.js server","main":"test/server.js","scripts":{"test":"grunt nodemon:exec & sleep 1s;kill -9 `pgrep node`; grunt nodemon:prod & sleep 1s; kill -9 `pgrep node`; grunt simplemocha:test1;grunt nodemon:exec & sleep 1s;kill -9 `pgrep node`;grunt simplemocha:test2;"},"repository":{"type":"git","url":"https://github.com/ChrisWren/grunt-nodemon.git"},"keywords":["gruntplugin","nodemon","server"],"author":{"name":"Chris Wren"},"license":"MIT","peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"grunt":"~0.4.1","grunt-simple-mocha":"~0.4.0","should":"~1.2.2","nodemon":"~0.7.8"},"readme":"# grunt-nodemon\n[![NPM version](https://badge.fury.io/js/grunt-nodemon.png)](http://badge.fury.io/js/grunt-nodemon)  \n[![Dependency Status](https://gemnasium.com/ChrisWren/grunt-nodemon.png)](https://gemnasium.com/ChrisWren/grunt-nodemon)   \n![Travis Status](https://travis-ci.org/ChrisWren/grunt-nodemon.png)  \n\n> Run [nodemon](https://github.com/remy/nodemon) as a grunt task for easy configuration and integration with the rest of your workflow.\n\n## Getting Started\nIf you haven't used grunt before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a gruntfile as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n```shell\nnpm install grunt-nodemon --save-dev\n```\n\nThen add this line to your project's `Gruntfile.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-nodemon');\n```\n\n## Documentation\n\n### Usage\nThe minimal usage of nodemon runs with no options:\n```js\nnodemon: {\n  dev: {}\n}\n```\nWhen this is run, nodemon will look at the `package.json` file for the `main` property and run its value as a command in node.\n\nHere is a config that uses all of the available options for nodemon:\n\n```js\nnodemon: {\n  prod: {\n    options: {\n      file: 'test/server.js',\n      args: ['production'],\n      ignoredFiles: ['README.md', 'node_modules/**'],\n      watchedExtensions: ['js', 'coffee'],\n      watchedFolders: ['test', 'tasks'],\n      debug: true,\n      delayTime: 1\n    }\n  },\n  exec: {\n    options: {\n      exec: 'less'\n    }\n  }\n}\n```\n\nA common use case is to run `nodemon` with other tasks concurrently. This can be achieved with the following config, which uses [grunt-concurrent](https://github.com/sindresorhus/grunt-concurrent) to run nodemon and [watch](https://github.com/gruntjs/grunt-contrib-watch) in a single terminal tab: \n```js\nconcurrent: {\n  target: {\n    tasks: ['nodemon', 'watch'],\n    options: {\n      logConcurrentOutput: true\n    }\n}\n```\n### Options\n\n#### file\nType: `string`\n\nThis is file that nodemon runs and restarts when changes are detected.\n\n### args\nType: `Array` of `strings`\n\nThis is the list of arguments to be passed to your file.\n\n### ignoredFiles\nType: `Array` of `string globs`\n\nThis is a list of ignored files specified by a glob pattern. [Here](https://github.com/remy/nodemon#ignoring-files) is an explanation of how to use the patterns to ignore files. This task will create a `.nodemonignore` file in your repo based on these settings which nodemon reads when it starts.\n\n### watchedExtensions\nType: `Array` of `strings` Default: `'js'`\n\nThis is a list of file extensions to watch for changes. By default nodemon only watches JavaScript files.\n\n### watchedFolders\nType: `Array` of `strings` Default: `'.'`\n\nList of folders to watch for changes if you don't want to watch the root folder and its subdirectories.\n\n### debug\nType: `Boolean`\n\nOptionally launch the node.js debug server.\n\n### delayTime\nType: `Number`\n\nDelay the restart of nodemon by a number of seconds when compiling a large amount of files so that the app doesn't needlessly restart after each file.\n\n### exec\nType: `string`\n\nYou can use nodemon to execute a command outside of node. Use this option to specify a command as a string with the argument being the file parameter above. You can read more on exec [here](https://github.com/remy/nodemon#running-non-node-scripts).\n\n# Changelog\n\n**0.0.0** - Initial release\n\n**0.0.1** - Added warning if `nodemon` isn't installed as a global module\n\n**0.0.2** - Removes `.nodemonignore` if it was previously generated and then the `ignoredFiles` option is removed \n\n**0.0.3** - Uses local version of `nodemon` for convenience and versioning\n","_id":"grunt-nodemon@0.0.3","dist":{"shasum":"836c808c2c0ba47aefef0de817178511fce1b074","tarball":"http://registry.npmjs.org/grunt-nodemon/-/grunt-nodemon-0.0.3.tgz"},"_npmVersion":"1.1.59","_npmUser":{"name":"chriswren","email":"chris@chrisawren.com"},"maintainers":[{"name":"chriswren","email":"chris@chrisawren.com"}],"directories":{}},"0.0.4":{"name":"grunt-nodemon","version":"0.0.4","description":"Grunt task to run a nodemon monitor of your node.js server","main":"test/server.js","scripts":{"test":"grunt nodemon:exec & sleep 1s;kill -9 `pgrep node`; grunt nodemon:prod & sleep 1s; kill -9 `pgrep node`; grunt simplemocha:test1;grunt nodemon:exec & sleep 1s;kill -9 `pgrep node`;grunt simplemocha:test2;"},"repository":{"type":"git","url":"https://github.com/ChrisWren/grunt-nodemon.git"},"keywords":["gruntplugin","nodemon","server"],"author":{"name":"Chris Wren"},"license":"MIT","peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"grunt":"~0.4.1","grunt-simple-mocha":"~0.4.0","should":"~1.2.2"},"dependencies":{"nodemon":"~0.7.8"},"readme":"# grunt-nodemon\n[![NPM version](https://badge.fury.io/js/grunt-nodemon.png)](http://badge.fury.io/js/grunt-nodemon)  \n[![Dependency Status](https://gemnasium.com/ChrisWren/grunt-nodemon.png)](https://gemnasium.com/ChrisWren/grunt-nodemon)   \n![Travis Status](https://travis-ci.org/ChrisWren/grunt-nodemon.png)  \n\n> Run [nodemon](https://github.com/remy/nodemon) as a grunt task for easy configuration and integration with the rest of your workflow.\n\n## Getting Started\nIf you haven't used grunt before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a gruntfile as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n```shell\nnpm install grunt-nodemon --save-dev\n```\n\nThen add this line to your project's `Gruntfile.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-nodemon');\n```\n\n## Documentation\n\n### Usage\nThe minimal usage of nodemon runs with no options:\n```js\nnodemon: {\n  dev: {}\n}\n```\nWhen this is run, nodemon will look at the `package.json` file for the `main` property and run its value as a command in node.\n\nHere is a config that uses all of the available options for nodemon:\n\n```js\nnodemon: {\n  prod: {\n    options: {\n      file: 'test/server.js',\n      args: ['production'],\n      ignoredFiles: ['README.md', 'node_modules/**'],\n      watchedExtensions: ['js', 'coffee'],\n      watchedFolders: ['test', 'tasks'],\n      debug: true,\n      delayTime: 1\n    }\n  },\n  exec: {\n    options: {\n      exec: 'less'\n    }\n  }\n}\n```\n\nA common use case is to run `nodemon` with other tasks concurrently. This can be achieved with the following config, which uses [grunt-concurrent](https://github.com/sindresorhus/grunt-concurrent) to run nodemon and [watch](https://github.com/gruntjs/grunt-contrib-watch) in a single terminal tab: \n```js\nconcurrent: {\n  target: {\n    tasks: ['nodemon', 'watch'],\n    options: {\n      logConcurrentOutput: true\n    }\n}\n```\n### Options\n\n#### file\nType: `string`\n\nThis is file that nodemon runs and restarts when changes are detected.\n\n### args\nType: `Array` of `strings`\n\nThis is the list of arguments to be passed to your file.\n\n### ignoredFiles\nType: `Array` of `string globs`\n\nThis is a list of ignored files specified by a glob pattern. [Here](https://github.com/remy/nodemon#ignoring-files) is an explanation of how to use the patterns to ignore files. This task will create a `.nodemonignore` file in your repo based on these settings which nodemon reads when it starts.\n\n### watchedExtensions\nType: `Array` of `strings` Default: `'js'`\n\nThis is a list of file extensions to watch for changes. By default nodemon only watches JavaScript files.\n\n### watchedFolders\nType: `Array` of `strings` Default: `'.'`\n\nList of folders to watch for changes if you don't want to watch the root folder and its subdirectories.\n\n### debug\nType: `Boolean`\n\nOptionally launch the node.js debug server.\n\n### delayTime\nType: `Number`\n\nDelay the restart of nodemon by a number of seconds when compiling a large amount of files so that the app doesn't needlessly restart after each file.\n\n### exec\nType: `string`\n\nYou can use nodemon to execute a command outside of node. Use this option to specify a command as a string with the argument being the file parameter above. You can read more on exec [here](https://github.com/remy/nodemon#running-non-node-scripts).\n\n# Changelog\n\n**0.0.0** - Initial release\n\n**0.0.1** - Added warning if `nodemon` isn't installed as a global module\n\n**0.0.2** - Removes `.nodemonignore` if it was previously generated and then the `ignoredFiles` option is removed \n\n**0.0.3** - Uses local version of `nodemon` for convenience and versioning\n\n**0.0.4** - Added `nodemon` as a proper dependency\n\n","_id":"grunt-nodemon@0.0.4","dist":{"shasum":"29f3aa08d7d93f0e99d467c2d74119399ec54736","tarball":"http://registry.npmjs.org/grunt-nodemon/-/grunt-nodemon-0.0.4.tgz"},"_npmVersion":"1.1.63","_npmUser":{"name":"chriswren","email":"chris@chrisawren.com"},"maintainers":[{"name":"chriswren","email":"chris@chrisawren.com"}],"directories":{}},"0.0.5":{"name":"grunt-nodemon","version":"0.0.5","description":"Grunt task to run a nodemon monitor of your node.js server","main":"test/server.js","scripts":{"test":"grunt nodemon:exec & sleep 1s;kill -9 `pgrep node`; grunt nodemon:prod & sleep 1s; kill -9 `pgrep node`; grunt simplemocha:test1;grunt nodemon:exec & sleep 1s;kill -9 `pgrep node`;grunt simplemocha:test2;"},"repository":{"type":"git","url":"https://github.com/ChrisWren/grunt-nodemon.git"},"keywords":["gruntplugin","nodemon","server"],"author":{"name":"Chris Wren"},"license":"MIT","peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"grunt":"~0.4.1","grunt-simple-mocha":"~0.4.0","should":"~1.2.2"},"dependencies":{"nodemon":"~0.7.8"},"readme":"# grunt-nodemon\n> Run [nodemon](https://github.com/remy/nodemon) as a grunt task for easy configuration and integration with the rest of your workflow.\n\n[![NPM version](https://badge.fury.io/js/grunt-nodemon.png)](http://badge.fury.io/js/grunt-nodemon)  \n[![Dependency Status](https://gemnasium.com/ChrisWren/grunt-nodemon.png)](https://gemnasium.com/ChrisWren/grunt-nodemon)   \n![Travis Status](https://travis-ci.org/ChrisWren/grunt-nodemon.png)\n## Getting Started\nIf you haven't used grunt before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a gruntfile as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n```shell\nnpm install grunt-nodemon --save-dev\n```\n\nThen add this line to your project's `Gruntfile.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-nodemon');\n```\n\n## Documentation\n\n### Usage\nThe minimal usage of nodemon runs with no options:\n```js\nnodemon: {\n  dev: {}\n}\n```\nWhen this is run, nodemon will look at the `package.json` file for the `main` property and run its value as a command in node.\n\nHere is a config that uses all of the available options for nodemon:\n\n```js\nnodemon: {\n  prod: {\n    options: {\n      file: 'test/server.js',\n      args: ['production'],\n      ignoredFiles: ['README.md', 'node_modules/**'],\n      watchedExtensions: ['js', 'coffee'],\n      watchedFolders: ['test', 'tasks'],\n      debug: true,\n      delayTime: 1,\n      cwd: __dirname\n    }\n  },\n  exec: {\n    options: {\n      exec: 'less'\n    }\n  }\n}\n```\n\nA common use case is to run `nodemon` with other tasks concurrently. This can be achieved with the following config, which uses [grunt-concurrent](https://github.com/sindresorhus/grunt-concurrent) to run nodemon and [watch](https://github.com/gruntjs/grunt-contrib-watch) in a single terminal tab: \n```js\nconcurrent: {\n  target: {\n    tasks: ['nodemon', 'watch'],\n    options: {\n      logConcurrentOutput: true\n    }\n  }\n}\n```\n### Options\n\n#### file\nType: `String`\n\nThis is file that nodemon runs and restarts when changes are detected.\n\n### args\nType: `Array` of `Strings`\n\nThis is the list of arguments to be passed to your file.\n\n### ignoredFiles\nType: `Array` of `String globs`\n\nThis is a list of ignored files specified by a glob pattern. [Here](https://github.com/remy/nodemon#ignoring-files) is an explanation of how to use the patterns to ignore files. This task will create a `.nodemonignore` file in your repo based on these settings which nodemon reads when it starts.\n\n### watchedExtensions\nType: `Array` of `Strings`\n\nThis is a list of file extensions to watch for changes. By default, nodemon watches `.js`, `.coffee`, and `.litcoffee` files.\n\n### watchedFolders\nType: `Array` of `Strings` Default: `'.'`\n\nList of folders to watch for changes if you don't want to watch the root folder and its subdirectories.\n\n### debug\nType: `Boolean`\n\nOptionally launch the node.js debug server.\n\n### delayTime\nType: `Number`\n\nDelay the restart of nodemon by a number of seconds when compiling a large amount of files so that the app doesn't needlessly restart after each file.\n\n### cwd\nType: `String`\n\nOptional configuration to change the current working directory.\n\n### exec\nType: `String`\n\nYou can use nodemon to execute a command outside of node. Use this option to specify a command as a string with the argument being the file parameter above. You can read more on exec [here](https://github.com/remy/nodemon#running-non-node-scripts).\n\n# Changelog\n\n**0.0.5** - Added `cwd` option\n\n**0.0.4** - Added `nodemon` as a proper dependency\n\n**0.0.3** - Uses local version of `nodemon` for convenience and versioning\n\n**0.0.2** - Removes `.nodemonignore` if it was previously generated and then the `ignoredFiles` option is removed \n\n**0.0.1** - Added warning if `nodemon` isn't installed as a global module\n\n**0.0.0** - Initial release\n","_id":"grunt-nodemon@0.0.5","dist":{"shasum":"e64a0a11e155e7250b9aa9dc697a8dedc814606a","tarball":"http://registry.npmjs.org/grunt-nodemon/-/grunt-nodemon-0.0.5.tgz"},"_npmVersion":"1.1.59","_npmUser":{"name":"chriswren","email":"chris@chrisawren.com"},"maintainers":[{"name":"chriswren","email":"chris@chrisawren.com"}],"directories":{}},"0.0.6":{"name":"grunt-nodemon","version":"0.0.6","description":"Grunt task to run a nodemon monitor of your node.js server","main":"test/server.js","scripts":{"test":"grunt nodemon:exec & sleep 1s;kill -9 `pgrep node`; grunt nodemon:prod & sleep 1s; kill -9 `pgrep node`; grunt simplemocha:test1;grunt nodemon:exec & sleep 1s;kill -9 `pgrep node`;grunt simplemocha:test2;"},"repository":{"type":"git","url":"https://github.com/ChrisWren/grunt-nodemon.git"},"keywords":["gruntplugin","nodemon","server"],"author":{"name":"Chris Wren"},"license":"MIT","peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"grunt":"~0.4.1","grunt-simple-mocha":"~0.4.0","should":"~1.2.2"},"dependencies":{"nodemon":"~0.7.8"},"readme":"# grunt-nodemon\n> Run [nodemon](https://github.com/remy/nodemon) as a grunt task for easy configuration and integration with the rest of your workflow\n\n[![NPM version](https://badge.fury.io/js/grunt-nodemon.png)](http://badge.fury.io/js/grunt-nodemon)  \n[![Dependency Status](https://gemnasium.com/ChrisWren/grunt-nodemon.png)](https://gemnasium.com/ChrisWren/grunt-nodemon)   \n[![Travis Status](https://travis-ci.org/ChrisWren/grunt-nodemon.png)](https://travis-ci.org/ChrisWren/grunt-nodemon)\n## Getting Started\nIf you haven't used grunt before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a gruntfile as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n```shell\nnpm install grunt-nodemon --save-dev\n```\n\nThen add this line to your project's `Gruntfile.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-nodemon');\n```\n\n## Documentation\n\n### Usage\nThe minimal usage of nodemon runs with no options:\n```js\nnodemon: {\n  dev: {}\n}\n```\nWhen this is run, nodemon will look at the `package.json` file for the `main` property and run its value as a command in node.\n\nHere is a config that uses all of the available options for nodemon:\n\n```js\nnodemon: {\n  prod: {\n    options: {\n      file: 'test/server.js',\n      args: ['production'],\n      ignoredFiles: ['README.md', 'node_modules/**'],\n      watchedExtensions: ['js', 'coffee'],\n      watchedFolders: ['test', 'tasks'],\n      debug: true,\n      delayTime: 1,\n      env: {\n        PORT: '8181'\n      },\n      cwd: __dirname\n    }\n  },\n  exec: {\n    options: {\n      exec: 'less'\n    }\n  }\n}\n```\n#### Running nodemon concurrently\nA common use case is to run `nodemon` with other tasks concurrently. This can be achieved with the following config, which uses [grunt-concurrent](https://github.com/sindresorhus/grunt-concurrent) to run nodemon and [watch](https://github.com/gruntjs/grunt-contrib-watch) in a single terminal tab: \n```js\nconcurrent: {\n  target: {\n    tasks: ['nodemon', 'watch'],\n    options: {\n      logConcurrentOutput: true\n    }\n  }\n}\n```\n### Options\n\n#### file\nType: `String`\n\nFile that nodemon runs and restarts when changes are detected.\n\n### args\nType: `Array` of `Strings`\n\nList of arguments to be passed to your file.\n\n### ignoredFiles\nType: `Array` of `String globs`\n\nList of ignored files specified by a glob pattern. [Here](https://github.com/remy/nodemon#ignoring-files) is an explanation of how to use the patterns to ignore files. This task will create a `.nodemonignore` file in your repo based on these settings which nodemon reads when it starts.\n\n### watchedExtensions\nType: `Array` of `Strings`\n\nList of file extensions to watch for changes. By default, nodemon watches `.js`, `.coffee`, and `.litcoffee` files.\n\n### watchedFolders\nType: `Array` of `Strings` Default: `'.'`\n\nList of folders to watch for changes if you don't want to watch the root folder and its subdirectories.\n\n### debug\nType: `Boolean`\n\nOptionally launch the node.js debug server.\n\n### delayTime\nType: `Number`\n\nDelay the restart of nodemon by a number of seconds when compiling a large amount of files so that the app doesn't needlessly restart after each file.\n\n### cwd\nType: `String`\n\nThe current working directory to run your file from.\n\n### env\nType: `Object`\n\nHash of environment variables to pass to your file.\n\n### exec\nType: `String`\n\nYou can use nodemon to execute a command outside of node. Use this option to specify a command as a string with the argument being the file parameter above. You can read more on exec [here](https://github.com/remy/nodemon#running-non-node-scripts).\n\n# Changelog\n\n**0.0.6** - Added `env` option\n\n**0.0.5** - Added `cwd` option\n\n**0.0.4** - Added `nodemon` as a proper dependency\n\n**0.0.3** - Uses local version of `nodemon` for convenience and versioning\n\n**0.0.2** - Removes `.nodemonignore` if it was previously generated and then the `ignoredFiles` option is removed \n\n**0.0.1** - Added warning if `nodemon` isn't installed as a global module\n\n**0.0.0** - Initial release\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/ChrisWren/grunt-nodemon/issues"},"_id":"grunt-nodemon@0.0.6","dist":{"shasum":"1f63aafc22ce5abecb868e109265b8608bef7b5a","tarball":"http://registry.npmjs.org/grunt-nodemon/-/grunt-nodemon-0.0.6.tgz"},"_from":".","_npmVersion":"1.2.25","_npmUser":{"name":"chriswren","email":"chris@chrisawren.com"},"maintainers":[{"name":"chriswren","email":"chris@chrisawren.com"}],"directories":{}},"0.0.7":{"name":"grunt-nodemon","version":"0.0.7","description":"Grunt task to run a nodemon monitor of your node.js server","main":"test/server.js","scripts":{"test":"grunt nodemon:exec & sleep 1s;kill -9 `pgrep node`; grunt nodemon:prod & sleep 1s; kill -9 `pgrep node`; grunt simplemocha:test1;grunt nodemon:exec & sleep 1s;kill -9 `pgrep node`;grunt simplemocha:test2;"},"repository":{"type":"git","url":"https://github.com/ChrisWren/grunt-nodemon.git"},"keywords":["gruntplugin","nodemon","server"],"author":{"name":"Chris Wren"},"license":"MIT","peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"grunt":"~0.4.1","grunt-simple-mocha":"~0.4.0","should":"~1.2.2"},"dependencies":{"nodemon":"~0.7.8"},"readme":"# grunt-nodemon\n> Run [nodemon](https://github.com/remy/nodemon) as a grunt task for easy configuration and integration with the rest of your workflow\n\n[![NPM version](https://badge.fury.io/js/grunt-nodemon.png)](http://badge.fury.io/js/grunt-nodemon)  \n[![Dependency Status](https://gemnasium.com/ChrisWren/grunt-nodemon.png)](https://gemnasium.com/ChrisWren/grunt-nodemon)   \n[![Travis Status](https://travis-ci.org/ChrisWren/grunt-nodemon.png)](https://travis-ci.org/ChrisWren/grunt-nodemon)\n## Getting Started\nIf you haven't used grunt before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a gruntfile as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n```shell\nnpm install grunt-nodemon --save-dev\n```\n\nThen add this line to your project's `Gruntfile.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-nodemon');\n```\n\n## Documentation\n\n### Usage\nThe minimal usage of nodemon runs with no options:\n```js\nnodemon: {\n  dev: {}\n}\n```\nWhen this is run, nodemon will look at the `package.json` file for the `main` property and run its value as a command in node.\n\nHere is a config that uses all of the available options for nodemon:\n\n```js\nnodemon: {\n  prod: {\n    options: {\n      file: 'test/server.js',\n      args: ['production'],\n      ignoredFiles: ['README.md', 'node_modules/**'],\n      watchedExtensions: ['js', 'coffee'],\n      watchedFolders: ['test', 'tasks'],\n      debug: true,\n      delayTime: 1,\n      env: {\n        PORT: '8181'\n      },\n      cwd: __dirname\n    }\n  },\n  exec: {\n    options: {\n      exec: 'less'\n    }\n  }\n}\n```\n#### Running nodemon concurrently\nA common use case is to run `nodemon` with other tasks concurrently. This can be achieved with the following config, which uses [grunt-concurrent](https://github.com/sindresorhus/grunt-concurrent) to run nodemon and [watch](https://github.com/gruntjs/grunt-contrib-watch) in a single terminal tab: \n```js\nconcurrent: {\n  target: {\n    tasks: ['nodemon', 'watch'],\n    options: {\n      logConcurrentOutput: true\n    }\n  }\n}\n```\n### Options\n\n#### file\nType: `String`\n\nFile that nodemon runs and restarts when changes are detected.\n\n### args\nType: `Array` of `Strings`\n\nList of arguments to be passed to your file.\n\n### ignoredFiles\nType: `Array` of `String globs`\n\nList of ignored files specified by a glob pattern. [Here](https://github.com/remy/nodemon#ignoring-files) is an explanation of how to use the patterns to ignore files. This task will create a `.nodemonignore` file in your repo based on these settings which nodemon reads when it starts.\n\n### watchedExtensions\nType: `Array` of `Strings`\n\nList of file extensions to watch for changes. By default, nodemon watches `.js`, `.coffee`, and `.litcoffee` files.\n\n### watchedFolders\nType: `Array` of `Strings` Default: `'.'`\n\nList of folders to watch for changes if you don't want to watch the root folder and its subdirectories.\n\n### debug\nType: `Boolean`\n\nOptionally launch the node.js debug server.\n\n### debugBreak\nType: `Boolean`\n\nOptionally launch the node.js debug server, automatically setting a breakpoint on the first line (using `--debug-brk`).\n\n### delayTime\nType: `Number`\n\nDelay the restart of nodemon by a number of seconds when compiling a large amount of files so that the app doesn't needlessly restart after each file.\n\n### cwd\nType: `String`\n\nThe current working directory to run your file from.\n\n### env\nType: `Object`\n\nHash of environment variables to pass to your file.\n\n### exec\nType: `String`\n\nYou can use nodemon to execute a command outside of node. Use this option to specify a command as a string with the argument being the file parameter above. You can read more on exec [here](https://github.com/remy/nodemon#running-non-node-scripts).\n\n# Changelog\n\n**0.0.7** - Added `debugBreak` option\n\n**0.0.6** - Added `env` option\n\n**0.0.5** - Added `cwd` option\n\n**0.0.4** - Added `nodemon` as a proper dependency\n\n**0.0.3** - Uses local version of `nodemon` for convenience and versioning\n\n**0.0.2** - Removes `.nodemonignore` if it was previously generated and then the `ignoredFiles` option is removed \n\n**0.0.1** - Added warning if `nodemon` isn't installed as a global module\n\n**0.0.0** - Initial release\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/ChrisWren/grunt-nodemon/issues"},"_id":"grunt-nodemon@0.0.7","dist":{"shasum":"c29b312542fb7d956bdffac14d61dc712d93151a","tarball":"http://registry.npmjs.org/grunt-nodemon/-/grunt-nodemon-0.0.7.tgz"},"_from":".","_npmVersion":"1.2.25","_npmUser":{"name":"chriswren","email":"chris@chrisawren.com"},"maintainers":[{"name":"chriswren","email":"chris@chrisawren.com"}],"directories":{}},"0.0.8":{"name":"grunt-nodemon","version":"0.0.8","description":"Grunt task to run a nodemon monitor of your node.js server","main":"test/server.js","scripts":{"test":"grunt nodemon:exec & sleep 1s;kill -9 `pgrep node`; grunt nodemon:prod & sleep 1s; kill -9 `pgrep node`; grunt simplemocha:test1;grunt nodemon:exec & sleep 1s;kill -9 `pgrep node`;grunt simplemocha:test2;"},"repository":{"type":"git","url":"https://github.com/ChrisWren/grunt-nodemon.git"},"keywords":["gruntplugin","nodemon","server"],"author":{"name":"Chris Wren"},"license":"MIT","peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"grunt":"~0.4.1","grunt-simple-mocha":"~0.4.0","should":"~1.2.2"},"dependencies":{"nodemon":"~0.7.8"},"readme":"# grunt-nodemon\n> Run [nodemon](https://github.com/remy/nodemon) as a grunt task for easy configuration and integration with the rest of your workflow\n\n[![NPM version](https://badge.fury.io/js/grunt-nodemon.png)](http://badge.fury.io/js/grunt-nodemon)  \n[![Dependency Status](https://gemnasium.com/ChrisWren/grunt-nodemon.png)](https://gemnasium.com/ChrisWren/grunt-nodemon)   \n[![Travis Status](https://travis-ci.org/ChrisWren/grunt-nodemon.png)](https://travis-ci.org/ChrisWren/grunt-nodemon)\n## Getting Started\nIf you haven't used grunt before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a gruntfile as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n```shell\nnpm install grunt-nodemon --save-dev\n```\n\nThen add this line to your project's `Gruntfile.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-nodemon');\n```\n\n## Documentation\n\n### Usage\nThe minimal usage of nodemon runs with no options:\n```js\nnodemon: {\n  dev: {}\n}\n```\nWhen this is run, nodemon will look at the `package.json` file for the `main` property and run its value as a command in node.\n\nHere is a config that uses all of the available options for nodemon:\n\n```js\nnodemon: {\n  prod: {\n    options: {\n      file: 'test/server.js',\n      args: ['production'],\n      ignoredFiles: ['README.md', 'node_modules/**'],\n      watchedExtensions: ['js', 'coffee'],\n      watchedFolders: ['test', 'tasks'],\n      debug: true,\n      delayTime: 1,\n      env: {\n        PORT: '8181'\n      },\n      cwd: __dirname\n    }\n  },\n  exec: {\n    options: {\n      exec: 'less'\n    }\n  }\n}\n```\n#### Running nodemon concurrently\nA common use case is to run `nodemon` with other tasks concurrently. This can be achieved with the following config, which uses [grunt-concurrent](https://github.com/sindresorhus/grunt-concurrent) to run nodemon and [watch](https://github.com/gruntjs/grunt-contrib-watch) in a single terminal tab: \n```js\nconcurrent: {\n  target: {\n    tasks: ['nodemon', 'watch'],\n    options: {\n      logConcurrentOutput: true\n    }\n  }\n}\n```\n### Options\n\n#### file\nType: `String`\n\nFile that nodemon runs and restarts when changes are detected.\n\n### args\nType: `Array` of `Strings`\n\nList of arguments to be passed to your file.\n\n### ignoredFiles\nType: `Array` of `String globs`\n\nList of ignored files specified by a glob pattern. [Here](https://github.com/remy/nodemon#ignoring-files) is an explanation of how to use the patterns to ignore files. This task will create a `.nodemonignore` file in your repo based on these settings which nodemon reads when it starts.\n\n### watchedExtensions\nType: `Array` of `Strings`\n\nList of file extensions to watch for changes. By default, nodemon watches `.js`, `.coffee`, and `.litcoffee` files.\n\n### watchedFolders\nType: `Array` of `Strings` Default: `'.'`\n\nList of folders to watch for changes if you don't want to watch the root folder and its subdirectories.\n\n### debug\nType: `Boolean`\n\nOptionally launch the node.js debug server.\n\n### debugBreak\nType: `Boolean`\n\nOptionally launch the node.js debug server, automatically setting a breakpoint on the first line (using `--debug-brk`).\n\n### delayTime\nType: `Number`\n\nDelay the restart of nodemon by a number of seconds when compiling a large amount of files so that the app doesn't needlessly restart after each file.\n\n### cwd\nType: `String`\n\nThe current working directory to run your file from.\n\n### env\nType: `Object`\n\nHash of environment variables to pass to your file.\n\n### exec\nType: `String`\n\nYou can use nodemon to execute a command outside of node. Use this option to specify a command as a string with the argument being the file parameter above. You can read more on exec [here](https://github.com/remy/nodemon#running-non-node-scripts).\n\n# Changelog\n\n**0.0.8** - Added error logging for incorrectly installed `nodemon`.\n\n**0.0.7** - Added `debugBreak` option.\n\n**0.0.6** - Added `env` option.\n\n**0.0.5** - Added `cwd` option.\n\n**0.0.4** - Added `nodemon` as a proper dependency.\n\n**0.0.3** - Uses local version of `nodemon` for convenience and versioning.\n\n**0.0.2** - Removes `.nodemonignore` if it was previously generated and then the `ignoredFiles` option is removed.\n\n**0.0.1** - Added warning if `nodemon` isn't installed as a global module.\n\n**0.0.0** - Initial release\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/ChrisWren/grunt-nodemon/issues"},"_id":"grunt-nodemon@0.0.8","dist":{"shasum":"796152b8b87d91fecb2f5c011046fb1bafc17662","tarball":"http://registry.npmjs.org/grunt-nodemon/-/grunt-nodemon-0.0.8.tgz"},"_from":".","_npmVersion":"1.2.32","_npmUser":{"name":"chriswren","email":"chris@chrisawren.com"},"maintainers":[{"name":"chriswren","email":"chris@chrisawren.com"}],"directories":{}},"0.0.9":{"name":"grunt-nodemon","version":"0.0.9","description":"Grunt task to run a nodemon monitor of your node.js server","main":"test/server.js","scripts":{"test":"grunt test"},"repository":{"type":"git","url":"https://github.com/ChrisWren/grunt-nodemon.git"},"keywords":["gruntplugin","nodemon","server"],"author":{"name":"Chris Wren"},"license":"MIT","peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"grunt":"~0.4.1","grunt-simple-mocha":"~0.4.0","should":"~1.2.2","grunt-release":"~0.5.1","grunt-contrib-jshint":"~0.6.2","matchdep":"~0.1.2"},"dependencies":{"nodemon":"~0.7.8"},"readme":"# grunt-nodemon\n> Run [nodemon](https://github.com/remy/nodemon) as a grunt task for easy configuration and integration with the rest of your workflow\n\n[![NPM version](https://badge.fury.io/js/grunt-nodemon.png)](http://badge.fury.io/js/grunt-nodemon)  \n[![Dependency Status](https://gemnasium.com/ChrisWren/grunt-nodemon.png)](https://gemnasium.com/ChrisWren/grunt-nodemon)   \n[![Travis Status](https://travis-ci.org/ChrisWren/grunt-nodemon.png)](https://travis-ci.org/ChrisWren/grunt-nodemon)\n## Getting Started\nIf you haven't used grunt before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a gruntfile as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n```shell\nnpm install grunt-nodemon --save-dev\n```\n\nThen add this line to your project's `Gruntfile.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-nodemon');\n```\n\n## Documentation\n\n### Usage\nThe minimal usage of nodemon runs with no options:\n```js\nnodemon: {\n  dev: {}\n}\n```\nWhen this is run, nodemon will look at the `package.json` file for the `main` property and run its value as a command in node.\n\nHere is a config that uses all of the available options for nodemon:\n\n```js\nnodemon: {\n  prod: {\n    options: {\n      file: 'test/server.js',\n      args: ['production'],\n      ignoredFiles: ['README.md', 'node_modules/**'],\n      watchedExtensions: ['js', 'coffee'],\n      watchedFolders: ['test', 'tasks'],\n      debug: true,\n      delayTime: 1,\n      env: {\n        PORT: '8181'\n      },\n      cwd: __dirname\n    }\n  },\n  exec: {\n    options: {\n      exec: 'less'\n    }\n  }\n}\n```\n#### Running nodemon concurrently\nA common use case is to run `nodemon` with other tasks concurrently. This can be achieved with the following config, which uses [grunt-concurrent](https://github.com/sindresorhus/grunt-concurrent) to run nodemon and [watch](https://github.com/gruntjs/grunt-contrib-watch) in a single terminal tab: \n```js\nconcurrent: {\n  target: {\n    tasks: ['nodemon', 'watch'],\n    options: {\n      logConcurrentOutput: true\n    }\n  }\n}\n```\n### Options\n\n#### file\nType: `String`\n\nFile that nodemon runs and restarts when changes are detected.\n\n### args\nType: `Array` of `Strings`\n\nList of arguments to be passed to your file.\n\n### ignoredFiles\nType: `Array` of `String globs`\n\nList of ignored files specified by a glob pattern. [Here](https://github.com/remy/nodemon#ignoring-files) is an explanation of how to use the patterns to ignore files. This task will create a `.nodemonignore` file in your repo based on these settings which nodemon reads when it starts.\n\n### watchedExtensions\nType: `Array` of `Strings`\n\nList of file extensions to watch for changes. By default, nodemon watches `.js`, `.coffee`, and `.litcoffee` files.\n\n### watchedFolders\nType: `Array` of `Strings` Default: `'.'`\n\nList of folders to watch for changes if you don't want to watch the root folder and its subdirectories.\n\n### debug\nType: `Boolean`\n\nOptionally launch the node.js debug server.\n\n### debugBreak\nType: `Boolean`\n\nOptionally launch the node.js debug server, automatically setting a breakpoint on the first line (using `--debug-brk`).\n\n### delayTime\nType: `Number`\n\nDelay the restart of nodemon by a number of seconds when compiling a large amount of files so that the app doesn't needlessly restart after each file.\n\n### cwd\nType: `String`\n\nThe current working directory to run your file from.\n\n### env\nType: `Object`\n\nHash of environment variables to pass to your file.\n\n### exec\nType: `String`\n\nYou can use nodemon to execute a command outside of node. Use this option to specify a command as a string with the argument being the file parameter above. You can read more on exec [here](https://github.com/remy/nodemon#running-non-node-scripts).\n\n# Changelog\n\n**0.0.8** - Added error logging for incorrectly installed `nodemon`.\n\n**0.0.7** - Added `debugBreak` option.\n\n**0.0.6** - Added `env` option.\n\n**0.0.5** - Added `cwd` option.\n\n**0.0.4** - Added `nodemon` as a proper dependency.\n\n**0.0.3** - Uses local version of `nodemon` for convenience and versioning.\n\n**0.0.2** - Removes `.nodemonignore` if it was previously generated and then the `ignoredFiles` option is removed.\n\n**0.0.1** - Added warning if `nodemon` isn't installed as a global module.\n\n**0.0.0** - Initial release\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/ChrisWren/grunt-nodemon/issues"},"_id":"grunt-nodemon@0.0.9","dist":{"shasum":"c6925459f5f25b4b6f02dc49a9671322e4bdae4d","tarball":"http://registry.npmjs.org/grunt-nodemon/-/grunt-nodemon-0.0.9.tgz"},"_from":".","_npmVersion":"1.2.32","_npmUser":{"name":"chriswren","email":"chris@chrisawren.com"},"maintainers":[{"name":"chriswren","email":"chris@chrisawren.com"}],"directories":{}},"0.0.10":{"name":"grunt-nodemon","version":"0.0.10","description":"Grunt task to run a nodemon monitor of your node.js server","main":"test/fixtures/server.js","scripts":{"test":"grunt test"},"repository":{"type":"git","url":"https://github.com/ChrisWren/grunt-nodemon.git"},"keywords":["gruntplugin","nodemon","server"],"author":{"name":"Chris Wren"},"license":"MIT","peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"grunt":"~0.4.1","grunt-simple-mocha":"~0.4.0","should":"~1.2.2","grunt-release":"~0.5.1","grunt-contrib-jshint":"~0.6.2","matchdep":"~0.1.2"},"dependencies":{"nodemon":"~0.7.8"},"readme":"# grunt-nodemon\n> Run [nodemon](https://github.com/remy/nodemon) as a grunt task for easy configuration and integration with the rest of your workflow\n\n[![NPM version](https://badge.fury.io/js/grunt-nodemon.png)](http://badge.fury.io/js/grunt-nodemon)  \n[![Dependency Status](https://gemnasium.com/ChrisWren/grunt-nodemon.png)](https://gemnasium.com/ChrisWren/grunt-nodemon)   \n[![Travis Status](https://travis-ci.org/ChrisWren/grunt-nodemon.png)](https://travis-ci.org/ChrisWren/grunt-nodemon)\n## Getting Started\nIf you haven't used grunt before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a gruntfile as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n```shell\nnpm install grunt-nodemon --save-dev\n```\n\nThen add this line to your project's `Gruntfile.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-nodemon');\n```\n\n## Documentation\n\n### Usage\nThe minimal usage of nodemon runs with no options:\n```js\nnodemon: {\n  dev: {}\n}\n```\nWhen this is run, nodemon will look at the `package.json` file for the `main` property and run its value as a command in node.\n\nHere is a config that uses all of the available options for nodemon:\n\n```js\nnodemon: {\n  prod: {\n    options: {\n      file: 'test/server.js',\n      args: ['production'],\n      nodeArgs: ['--trace-gc', '--nouse_idle_notification', '--expose_gc'],\n      ignoredFiles: ['README.md', 'node_modules/**'],\n      watchedExtensions: ['js'],\n      watchedFolders: ['test', 'tasks'],\n      debug: true,\n      delayTime: 1,\n      env: {\n        PORT: '8181'\n      },\n      cwd: __dirname\n    }\n  },\n  exec: {\n    options: {\n      exec: 'less'\n    }\n  }\n}\n```\n#### Running nodemon concurrently\nA common use case is to run `nodemon` with other tasks concurrently. This can be achieved with the following config, which uses [grunt-concurrent](https://github.com/sindresorhus/grunt-concurrent) to run nodemon and [watch](https://github.com/gruntjs/grunt-contrib-watch) in a single terminal tab: \n```js\nconcurrent: {\n  target: {\n    tasks: ['nodemon', 'watch'],\n    options: {\n      logConcurrentOutput: true\n    }\n  }\n}\n```\n### Options\n\n#### file\nType: `String`\n\nFile that nodemon runs and restarts when changes are detected.\n\n### args\nType: `Array` of `Strings`\n\nList of arguments to be passed to your file.\n\n### nodeArgs\nType: `Array` of `Strings`\n\nList of arguments to be passed to ```node```.\n\n### ignoredFiles\nType: `Array` of `String globs`\n\nList of ignored files specified by a glob pattern. [Here](https://github.com/remy/nodemon#ignoring-files) is an explanation of how to use the patterns to ignore files. This task will create a `.nodemonignore` file in your repo based on these settings which nodemon reads when it starts.\n\n### watchedExtensions\nType: `Array` of `Strings`\n\nList of file extensions to watch for changes. By default, nodemon watches `.js`, `.coffee`, and `.litcoffee` files.\n\n### watchedFolders\nType: `Array` of `Strings` Default: `'.'`\n\nList of folders to watch for changes if you don't want to watch the root folder and its subdirectories.\n\n### debug\nType: `Boolean`\n\nOptionally launch the node.js debug server.\n\n### debugBreak\nType: `Boolean`\n\nOptionally launch the node.js debug server, automatically setting a breakpoint on the first line (using `--debug-brk`).\n\n### delayTime\nType: `Number`\n\nDelay the restart of nodemon by a number of seconds when compiling a large amount of files so that the app doesn't needlessly restart after each file.\n\n### cwd\nType: `String`\n\nThe current working directory to run your file from.\n\n### env\nType: `Object`\n\nHash of environment variables to pass to your file.\n\n### exec\nType: `String`\n\nYou can use nodemon to execute a command outside of node. Use this option to specify a command as a string with the argument being the file parameter above. You can read more on exec [here](https://github.com/remy/nodemon#running-non-node-scripts).\n\n# Changelog\n\n**0.0.9** - Fixed bug when using `cwd` with `ignoredFiles`.\n\n**0.0.8** - Added error logging for incorrectly installed `nodemon`.\n\n**0.0.7** - Added `debugBreak` option.\n\n**0.0.6** - Added `env` option.\n\n**0.0.5** - Added `cwd` option.\n\n**0.0.4** - Added `nodemon` as a proper dependency.\n\n**0.0.3** - Uses local version of `nodemon` for convenience and versioning.\n\n**0.0.2** - Removes `.nodemonignore` if it was previously generated and then the `ignoredFiles` option is removed.\n\n**0.0.1** - Added warning if `nodemon` isn't installed as a global module.\n\n**0.0.0** - Initial release\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/ChrisWren/grunt-nodemon/issues"},"_id":"grunt-nodemon@0.0.10","dist":{"shasum":"838ee978e1f91a9ecceaff4bf3e88267f7135787","tarball":"http://registry.npmjs.org/grunt-nodemon/-/grunt-nodemon-0.0.10.tgz"},"_from":".","_npmVersion":"1.2.32","_npmUser":{"name":"chriswren","email":"chris@chrisawren.com"},"maintainers":[{"name":"chriswren","email":"chris@chrisawren.com"}],"directories":{}},"0.1.0":{"name":"grunt-nodemon","version":"0.1.0","description":"Grunt task to run a nodemon monitor of your node.js server","main":"test/fixtures/server.js","scripts":{"test":"grunt test"},"repository":{"type":"git","url":"https://github.com/ChrisWren/grunt-nodemon.git"},"keywords":["gruntplugin","nodemon","server"],"author":{"name":"Chris Wren"},"license":"MIT","peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"grunt":"~0.4.1","grunt-simple-mocha":"~0.4.0","should":"~1.2.2","grunt-release":"~0.5.1","grunt-contrib-jshint":"~0.6.2","matchdep":"~0.1.2"},"dependencies":{"nodemon":"~0.7.8"},"readme":"# grunt-nodemon\n> Run [nodemon](https://github.com/remy/nodemon) as a grunt task for easy configuration and integration with the rest of your workflow\n\n[![NPM version](https://badge.fury.io/js/grunt-nodemon.png)](http://badge.fury.io/js/grunt-nodemon)  \n[![Dependency Status](https://gemnasium.com/ChrisWren/grunt-nodemon.png)](https://gemnasium.com/ChrisWren/grunt-nodemon)   \n[![Travis Status](https://travis-ci.org/ChrisWren/grunt-nodemon.png)](https://travis-ci.org/ChrisWren/grunt-nodemon)\n## Getting Started\nIf you haven't used grunt before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a gruntfile as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n```shell\nnpm install grunt-nodemon --save-dev\n```\n\nThen add this line to your project's `Gruntfile.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-nodemon');\n```\n\n## Documentation\n\n### Usage\nThe minimal usage of nodemon runs with no options:\n```js\nnodemon: {\n  dev: {}\n}\n```\nWhen this is run, nodemon will look at the `package.json` file for the `main` property and run its value as a command in node.\n\nHere is a config that uses all of the available options for nodemon:\n\n```js\nnodemon: {\n  prod: {\n    options: {\n      file: 'test/server.js',\n      args: ['production'],\n      nodeArgs: ['--debug'],\n      ignoredFiles: ['README.md', 'node_modules/**'],\n      watchedExtensions: ['js'],\n      watchedFolders: ['test', 'tasks'],\n      delayTime: 1,\n      env: {\n        PORT: '8181'\n      },\n      cwd: __dirname\n    }\n  },\n  exec: {\n    options: {\n      exec: 'less'\n    }\n  }\n}\n```\n#### Running nodemon concurrently\nA common use case is to run `nodemon` with other tasks concurrently. This can be achieved with the following config, which uses [grunt-concurrent](https://github.com/sindresorhus/grunt-concurrent) to run nodemon and [watch](https://github.com/gruntjs/grunt-contrib-watch) in a single terminal tab: \n```js\nconcurrent: {\n  target: {\n    tasks: ['nodemon', 'watch'],\n    options: {\n      logConcurrentOutput: true\n    }\n  }\n}\n```\n### Options\n\n#### file\nType: `String`\n\nFile that nodemon runs and restarts when changes are detected.\n\n### args\nType: `Array` of `Strings`\n\nList of arguments to be passed to your file.\n\n### nodeArgs\nType: `Array` of `Strings`\n\nList of arguments to be passed to node. The most common argument is `--debug` or `--debug-brk` to start a debugging server. \n\n### ignoredFiles\nType: `Array` of `String globs`\n\nList of ignored files specified by a glob pattern. [Here](https://github.com/remy/nodemon#ignoring-files) is an explanation of how to use the patterns to ignore files. This task will create a `.nodemonignore` file in your repo based on these settings which nodemon reads when it starts.\n\n### watchedExtensions\nType: `Array` of `Strings`\n\nList of file extensions to watch for changes. By default, nodemon watches `.js`, `.coffee`, and `.litcoffee` files.\n\n### watchedFolders\nType: `Array` of `Strings` Default: `'.'`\n\nList of folders to watch for changes if you don't want to watch the root folder and its subdirectories.\n\n### delayTime\nType: `Number`\n\nDelay the restart of nodemon by a number of seconds when compiling a large amount of files so that the app doesn't needlessly restart after each file.\n\n### cwd\nType: `String`\n\nThe current working directory to run your file from.\n\n### env\nType: `Object`\n\nHash of environment variables to pass to your file.\n\n### exec\nType: `String`\n\nYou can use nodemon to execute a command outside of node. Use this option to specify a command as a string with the argument being the file parameter above. You can read more on exec [here](https://github.com/remy/nodemon#running-non-node-scripts).\n\n# Changelog\n\n**0.0.10** - Added `nodeArgs` option.\n\n**0.0.9** - Fixed bug when using `cwd` with `ignoredFiles`.\n\n**0.0.8** - Added error logging for incorrectly installed `nodemon`.\n\n**0.0.7** - Added `debugBreak` option.\n\n**0.0.6** - Added `env` option.\n\n**0.0.5** - Added `cwd` option.\n\n**0.0.4** - Added `nodemon` as a proper dependency.\n\n**0.0.3** - Uses local version of `nodemon` for convenience and versioning.\n\n**0.0.2** - Removes `.nodemonignore` if it was previously generated and then the `ignoredFiles` option is removed.\n\n**0.0.1** - Added warning if `nodemon` isn't installed as a global module.\n\n**0.0.0** - Initial release\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/ChrisWren/grunt-nodemon/issues"},"_id":"grunt-nodemon@0.1.0","dist":{"shasum":"d0f042cccd90d5bfc796ba55dff4eb6ee4c20008","tarball":"http://registry.npmjs.org/grunt-nodemon/-/grunt-nodemon-0.1.0.tgz"},"_from":".","_npmVersion":"1.2.32","_npmUser":{"name":"chriswren","email":"chris@chrisawren.com"},"maintainers":[{"name":"chriswren","email":"chris@chrisawren.com"}],"directories":{}},"0.1.1":{"name":"grunt-nodemon","version":"0.1.1","description":"Grunt task to run a nodemon monitor of your node.js server","main":"test/fixtures/server.js","scripts":{"test":"grunt test"},"repository":{"type":"git","url":"https://github.com/ChrisWren/grunt-nodemon.git"},"keywords":["gruntplugin","nodemon","server"],"author":{"name":"Chris Wren"},"license":"MIT","peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"grunt":"~0.4.1","grunt-simple-mocha":"~0.4.0","should":"~1.2.2","grunt-release":"~0.5.1","grunt-contrib-jshint":"~0.6.2","matchdep":"~0.1.2","grunt-mdlint":"0.0.0"},"dependencies":{"nodemon":"~0.7.8"},"readme":"# grunt-nodemon\n> Run [nodemon](https://github.com/remy/nodemon) as a grunt task for easy configuration and integration with the rest of your workflow\n\n[![NPM version](https://badge.fury.io/js/grunt-nodemon.png)](http://badge.fury.io/js/grunt-nodemon) [![Dependency Status](https://gemnasium.com/ChrisWren/grunt-nodemon.png)](https://gemnasium.com/ChrisWren/grunt-nodemon) [![Travis Status](https://travis-ci.org/ChrisWren/grunt-nodemon.png)](https://travis-ci.org/ChrisWren/grunt-nodemon)\n## Getting Started\nIf you haven't used grunt before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a gruntfile as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n```shell\nnpm install grunt-nodemon --save-dev\n```\n\nThen add this line to your project's `Gruntfile.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-nodemon');\n```\n\n## Documentation\n\n### Usage\nThe minimal usage of nodemon runs with no options:\n```js\nnodemon: {\n  dev: {}\n}\n```\nWhen this is run, nodemon will look at the `package.json` file for the `main` property and run its value as a command in node.\n\nHere is a config that uses all of the available options for nodemon:\n\n```js\nnodemon: {\n  prod: {\n    options: {\n      file: 'test/server.js',\n      args: ['production'],\n      nodeArgs: ['--debug'],\n      ignoredFiles: ['README.md', 'node_modules/**'],\n      watchedExtensions: ['js'],\n      watchedFolders: ['test', 'tasks'],\n      delayTime: 1,\n      legacyWatch: true,\n      env: {\n        PORT: '8181'\n      },\n      cwd: __dirname\n    }\n  },\n  exec: {\n    options: {\n      exec: 'less'\n    }\n  }\n}\n```\n#### Running nodemon concurrently\nA common use case is to run `nodemon` with other tasks concurrently. This can be achieved with the following config, which uses [grunt-concurrent](https://github.com/sindresorhus/grunt-concurrent) to run nodemon and [watch](https://github.com/gruntjs/grunt-contrib-watch) in a single terminal tab:\n```js\nconcurrent: {\n  target: {\n    tasks: ['nodemon', 'watch'],\n    options: {\n      logConcurrentOutput: true\n    }\n  }\n}\n```\n### Options\n\n#### file\nType: `String`\n\nFile that nodemon runs and restarts when changes are detected.\n\n### args\nType: `Array` of `Strings`\n\nList of arguments to be passed to your file.\n\n### nodeArgs\nType: `Array` of `Strings`\n\nList of arguments to be passed to node. The most common argument is `--debug` or `--debug-brk` to start a debugging server.\n\n### ignoredFiles\nType: `Array` of `String globs`\n\nList of ignored files specified by a glob pattern. [Here](https://github.com/remy/nodemon#ignoring-files) is an explanation of how to use the patterns to ignore files. This task will create a `.nodemonignore` file in your repo based on these settings which nodemon reads when it starts.\n\n### watchedExtensions\nType: `Array` of `Strings`\n\nList of file extensions to watch for changes. By default, nodemon watches `.js`, `.coffee`, and `.litcoffee` files.\n\n### watchedFolders\nType: `Array` of `Strings` Default: `'.'`\n\nList of folders to watch for changes if you don't want to watch the root folder and its subdirectories.\n\n### delayTime\nType: `Number`\n\nDelay the restart of nodemon by a number of seconds when compiling a large amount of files so that the app doesn't needlessly restart after each file.\n\n### legacyWatch\nType: `Boolean`\n\nIf you wish to force nodemon to start with the legacy watch method. See <https://github.com/remy/nodemon#help-my-changes-arent-being-detected> for more details.\n\n### cwd\nType: `String`\n\nThe current working directory to run your file from.\n\n### env\nType: `Object`\n\nHash of environment variables to pass to your file.\n\n### exec\nType: `String`\n\nYou can use nodemon to execute a command outside of node. Use this option to specify a command as a string with the argument being the file parameter above. You can read more on exec [here](https://github.com/remy/nodemon#running-non-node-scripts).\n\n# Changelog\n\n**0.1.0** - Removed `debug` and `debugBrk` options as they are encapsulated by the `nodeArgs` option.\n\n**Breaking changes:**\n\n- Configs with the `debug` or `debugBrk` options will no longer work as expected. They simply need to be added to `nodeArgs`.\n\n**0.0.10** - Added `nodeArgs` option thanks to [@eugeneiiim](https://github.com/eugeneiiim).\n\n**0.0.9** - Fixed bug when using `cwd` with `ignoredFiles`.\n\n**0.0.8** - Added error logging for incorrectly installed `nodemon`.\n\n**0.0.7** - Added `debugBreak` option thanks to [@bchu](https://github.com/bchu).\n\n**0.0.6** - Added `env` option.\n\n**0.0.5** - Added `cwd` option.\n\n**0.0.4** - Added `nodemon` as a proper dependency.\n\n**0.0.3** - Uses local version of `nodemon` for convenience and versioning.\n\n**0.0.2** - Removes `.nodemonignore` if it was previously generated and then the `ignoredFiles` option is removed.\n\n**0.0.1** - Added warning if `nodemon` isn't installed as a global module.\n\n**0.0.0** - Initial release\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/ChrisWren/grunt-nodemon/issues"},"_id":"grunt-nodemon@0.1.1","dist":{"shasum":"ff4f154f3fd62d8d916ab632ba10c4a269b9a91e","tarball":"http://registry.npmjs.org/grunt-nodemon/-/grunt-nodemon-0.1.1.tgz"},"_from":".","_npmVersion":"1.2.32","_npmUser":{"name":"chriswren","email":"chris@chrisawren.com"},"maintainers":[{"name":"chriswren","email":"chris@chrisawren.com"}],"directories":{}},"0.1.2":{"name":"grunt-nodemon","version":"0.1.2","description":"Grunt task to run a nodemon monitor of your node.js server","main":"test/fixtures/server.js","scripts":{"test":"grunt test"},"repository":{"type":"git","url":"https://github.com/ChrisWren/grunt-nodemon.git"},"keywords":["gruntplugin","nodemon","server"],"author":{"name":"Chris Wren"},"license":"MIT","peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"grunt":"~0.4.1","grunt-simple-mocha":"~0.4.0","should":"~1.2.2","grunt-release":"~0.5.1","grunt-contrib-jshint":"~0.6.2","matchdep":"~0.1.2","grunt-mdlint":"0.0.0"},"dependencies":{"nodemon":"~0.7.8"},"readme":"# grunt-nodemon\n> Run [nodemon](https://github.com/remy/nodemon) as a grunt task for easy configuration and integration with the rest of your workflow\n\n[![NPM version](https://badge.fury.io/js/grunt-nodemon.png)](http://badge.fury.io/js/grunt-nodemon) [![Dependency Status](https://gemnasium.com/ChrisWren/grunt-nodemon.png)](https://gemnasium.com/ChrisWren/grunt-nodemon) [![Travis Status](https://travis-ci.org/ChrisWren/grunt-nodemon.png)](https://travis-ci.org/ChrisWren/grunt-nodemon)\n## Getting Started\nIf you haven't used grunt before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a gruntfile as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n```shell\nnpm install grunt-nodemon --save-dev\n```\n\nThen add this line to your project's `Gruntfile.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-nodemon');\n```\n\n## Documentation\n\n### Usage\nThe minimal usage of nodemon runs with no options:\n```js\nnodemon: {\n  dev: {}\n}\n```\nWhen this is run, nodemon will look at the `package.json` file for the `main` property and run its value as a command in node.\n\n### Common Usage\n\nThis config will start a node server located at `server.js` with the `--debug` node argument to allow for debugging and pass the PORT environment variable.\n\n```js\nnodemon: {\n  dev: {\n    options: {\n      file: 'server.js',\n      nodeArgs: ['--debug'],\n      env: {\n        PORT: '8282'\n      }\n    }\n  }\n}\n```\n\n### Example with all available options\n\n```js\nnodemon: {\n  dev: {\n    options: {\n      file: 'server.js',\n      args: ['dev'],\n      nodeArgs: ['--debug'],\n      ignoredFiles: ['node_modules/**'],\n      watchedExtensions: ['js'],\n      watchedFolders: ['server'],\n      delayTime: 1,\n      legacyWatch: true,\n      env: {\n        PORT: '8181'\n      },\n      cwd: __dirname\n    }\n  },\n  exec: {\n    options: {\n      exec: 'less'\n    }\n  }\n}\n```\n\n#### Running nodemon concurrently\n\nA common use case is to run `nodemon` with other tasks concurrently. This can be achieved with the following config, which uses [grunt-concurrent](https://github.com/sindresorhus/grunt-concurrent) to run nodemon, [node-inspector](https://github.com/ChrisWren/grunt-node-inspector), and [watch](https://github.com/gruntjs/grunt-contrib-watch) in a single terminal tab:\n```js\nconcurrent: {\n  dev: {\n    tasks: ['nodemon', 'node-inspector', 'watch'],\n    options: {\n      logConcurrentOutput: true\n    }\n  }\n}\n```\n\n### Options\n\n#### file\nType: `String`\n\nFile that nodemon runs and restarts when changes are detected.\n\n### args\nType: `Array` of `Strings`\n\nList of arguments to be passed to your file.\n\n### nodeArgs\nType: `Array` of `Strings`\n\nList of arguments to be passed to node. The most common argument is `--debug` or `--debug-brk` to start a debugging server.\n\n### ignoredFiles\nType: `Array` of `String globs`\n\nList of ignored files specified by a glob pattern. [Here](https://github.com/remy/nodemon#ignoring-files) is an explanation of how to use the patterns to ignore files. This task will create a `.nodemonignore` file in your repo based on these settings which nodemon reads when it starts.\n\n### watchedExtensions\nType: `Array` of `Strings`\n\nList of file extensions to watch for changes. By default, nodemon watches `.js`, `.coffee`, and `.litcoffee` files.\n\n### watchedFolders\nType: `Array` of `Strings` Default: `'.'`\n\nList of folders to watch for changes if you don't want to watch the root folder and its subdirectories.\n\n### delayTime\nType: `Number`\n\nDelay the restart of nodemon by a number of seconds when compiling a large amount of files so that the app doesn't needlessly restart after each file.\n\n### legacyWatch\nType: `Boolean`\n\nIf you wish to force nodemon to start with the legacy watch method. See <https://github.com/remy/nodemon#help-my-changes-arent-being-detected> for more details.\n\n### cwd\nType: `String`\n\nThe current working directory to run your file from.\n\n### env\nType: `Object`\n\nHash of environment variables to pass to your file.\n\n### exec\nType: `String`\n\nYou can use nodemon to execute a command outside of node. Use this option to specify a command as a string with the argument being the file parameter above. You can read more on exec [here](https://github.com/remy/nodemon#running-non-node-scripts).\n\n# Changelog\n\n**0.1.1** - Added `legacyWatch` option thanks to [@jonursenbach](https://github.com/jonursenbach).\n\n**0.1.0** - Removed `debug` and `debugBrk` options as they are encapsulated by the `nodeArgs` option.\n\n**Breaking changes:**\n\n- Configs with the `debug` or `debugBrk` options will no longer work as expected. They simply need to be added to `nodeArgs`.\n\n**0.0.10** - Added `nodeArgs` option thanks to [@eugeneiiim](https://github.com/eugeneiiim).\n\n**0.0.9** - Fixed bug when using `cwd` with `ignoredFiles`.\n\n**0.0.8** - Added error logging for incorrectly installed `nodemon`.\n\n**0.0.7** - Added `debugBreak` option thanks to [@bchu](https://github.com/bchu).\n\n**0.0.6** - Added `env` option.\n\n**0.0.5** - Added `cwd` option.\n\n**0.0.4** - Added `nodemon` as a proper dependency.\n\n**0.0.3** - Uses local version of `nodemon` for convenience and versioning.\n\n**0.0.2** - Removes `.nodemonignore` if it was previously generated and then the `ignoredFiles` option is removed.\n\n**0.0.1** - Added warning if `nodemon` isn't installed as a global module.\n\n**0.0.0** - Initial release\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/ChrisWren/grunt-nodemon/issues"},"_id":"grunt-nodemon@0.1.2","dist":{"shasum":"fe79eedb23a14ebc120e5b2e22b2389f2e16a474","tarball":"http://registry.npmjs.org/grunt-nodemon/-/grunt-nodemon-0.1.2.tgz"},"_from":".","_npmVersion":"1.2.32","_npmUser":{"name":"chriswren","email":"chris@chrisawren.com"},"maintainers":[{"name":"chriswren","email":"chris@chrisawren.com"}],"directories":{}}},"readme":"# grunt-nodemon\n\nRun [nodemon](https://github.com/remy/nodemon) as a grunt task for easy configuration and integration with the rest of your workflow.\n\n## Getting Started\nIf you haven't used grunt before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a gruntfile as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n```shell\nnpm install grunt-nodemon --save-dev\n```\n\nThen add this line to your project's `Gruntfile.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-nodemon');\n```\n\n## Documentation\n\n### Dependencies\nThe only non-grunt dependency of grunt-nodemon is the nodemon module. If you don't have nodemon installed, install it globally with this command:\n\n```shell\nnpm install nodemon -g\n```\n\n### Usage\nThe minimal usage of nodemon runs with no options:\n```js\nnodemon: {\n    dev: {}\n  }\n```\nWhen this is run, nodemon will look at the `package.json` file for the `main` property and run its value as a command in node.\n\nHere is a config that uses all of the available options for nodemon:\n\n```js\nnodemon: {\n    prod: {\n      options: {\n        file: 'test/server.js',\n        args: ['production'],\n        ignoredFiles: ['README.md', 'node_modules/**'],\n        watchedExtensions: ['js', 'coffee'],\n        watchedFolders: ['test', 'tasks'],\n        debug: true,\n        delayTime: 1\n      }\n    },\n    exec: {\n      options: {\n        exec: 'less'\n      }\n    }\n  }\n```\n### Options\n\n#### file\nType: `string`\n\nThis is file that nodemon runs and restarts when changes are detected.\n\n### args\nType: `Array` of `strings`\n\nThis is the list of arguments to be passed to your file.\n\n### ignoredFiles\nType: `Array` of `string globs`\n\nThis is a list of ignored files specified by a glob pattern. [Here](https://github.com/remy/nodemon#ignoring-files) is an explanation of how to use the patterns to ignore files. This task will create a `.nodemonignore` file in your repo based on these settings which nodemon reads when it starts.\n\n### watchedExtensions\nType: `Array` of `strings` Default: `'js'`\n\nThis is a list of file extensions to watch for changes. By default nodemon only watches JavaScript files.\n\n### watchedFolders\nType: `Array` of `strings` Default: `'.'`\n\nList of folders to watch for changes if you don't want to watch the root folder and its subdirectories.\n\n### debug\nType: `Boolean`\n\nOptionally launch the node.js debug server.\n\n### delayTime\nType: `Number`\n\nDelay the restart of nodemon by a number of seconds when compiling a large amount of files so that the app doesn't needlessly restart after each file.\n\n### exec\nType: `string`\n\nYou can use nodemon to execute a command outside of node. Use this option to specify a command as a string with the argument being the file parameter above. You can read more on exec [here](https://github.com/remy/nodemon#running-non-node-scripts).\n\n","maintainers":[{"name":"chriswren","email":"chris@chrisawren.com"}],"time":{"0.0.0":"2013-04-15T00:48:56.701Z","0.0.1":"2013-04-28T01:54:32.793Z","0.0.2":"2013-05-03T16:52:32.495Z","0.0.3":"2013-05-06T01:26:35.888Z","0.0.4":"2013-05-09T18:27:37.691Z","0.0.5":"2013-06-21T23:54:05.900Z","0.0.6":"2013-06-28T23:50:34.731Z","0.0.7":"2013-06-30T01:35:14.128Z","0.0.8":"2013-07-13T23:03:40.305Z","0.0.9":"2013-08-07T03:33:06.128Z","0.0.10":"2013-08-10T21:44:26.457Z","0.1.0":"2013-08-11T02:16:32.776Z","0.1.1":"2013-09-05T03:01:14.458Z","0.1.2":"2013-11-13T05:59:58.400Z"},"author":{"name":"Chris Wren"},"repository":{"type":"git","url":"https://github.com/ChrisWren/grunt-nodemon.git"},"_attachments":{"grunt-nodemon-0.1.2.tgz":{"content_type":"application/octet-stream","revpos":32,"digest":"md5-8nWpF7WjA7lr0O6/uwX2Ig==","length":4042,"stub":true},"grunt-nodemon-0.1.1.tgz":{"content_type":"application/octet-stream","revpos":30,"digest":"md5-2Qy8581FR0xqmDITCPjIhQ==","length":4431,"stub":true},"grunt-nodemon-0.1.0.tgz":{"content_type":"application/octet-stream","revpos":28,"digest":"md5-PxDtoUtPnRMzNW3QCmROgA==","length":4250,"stub":true},"grunt-nodemon-0.0.10.tgz":{"content_type":"application/octet-stream","revpos":26,"digest":"md5-vkiByq8AYgCGVz/Lr3sbyg==","length":4329,"stub":true},"grunt-nodemon-0.0.9.tgz":{"content_type":"application/octet-stream","revpos":24,"digest":"md5-Nt0gBQ6WyRi5urviivIPHg==","length":4253,"stub":true},"grunt-nodemon-0.0.8.tgz":{"content_type":"application/octet-stream","revpos":22,"digest":"md5-NtA0F9d4z747eonjY+pKig==","length":3887,"stub":true},"grunt-nodemon-0.0.7.tgz":{"content_type":"application/octet-stream","revpos":20,"digest":"md5-wxHdpnpdhNdUB5+EFdcQaQ==","length":3795,"stub":true},"grunt-nodemon-0.0.6.tgz":{"content_type":"application/octet-stream","revpos":18,"digest":"md5-PjEGeJ9YTuQb9qIkc2xAjA==","length":3728,"stub":true},"grunt-nodemon-0.0.5.tgz":{"content_type":"application/octet-stream","revpos":17,"digest":"md5-CIkdl1e/5PXBd3s2LnFuxg==","length":3656,"stub":true},"grunt-nodemon-0.0.4.tgz":{"content_type":"application/octet-stream","revpos":15,"digest":"md5-f3HQ8wPp2GA0fgt6l3thHQ==","length":4437,"stub":true},"grunt-nodemon-0.0.3.tgz":{"content_type":"application/octet-stream","revpos":9,"digest":"md5-JOIa1Cgov2/kXy/qmcsdcg==","length":4330,"stub":true},"grunt-nodemon-0.0.2.tgz":{"content_type":"application/octet-stream","revpos":7,"digest":"md5-vbVuUTZQQlZTp614ABaTJQ==","length":5359,"stub":true},"grunt-nodemon-0.0.1.tgz":{"content_type":"application/octet-stream","revpos":5,"digest":"md5-I/hUyY3aTiHGE5SCmujifA==","length":3489,"stub":true},"grunt-nodemon-0.0.0.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-+i2z2CwpMU+FQwTBslCGzg==","length":3284,"stub":true}},"_etag":"\"3QR70HVMNFLS7M8OWS0PV8KDI\""}