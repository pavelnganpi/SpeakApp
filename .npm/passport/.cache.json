{"_id":"passport","_rev":"56-47fa899474824806659e86e8c3f13531","name":"passport","description":"Simple, unobtrusive authentication for Node.js.","dist-tags":{"latest":"0.1.17"},"versions":{"0.1.0":{"name":"passport","version":"0.1.0","description":"Authentication framework for Connect and Express.","author":{"name":"Jared Hanson","email":"jaredhanson@gmail.com","url":"http://www.jaredhanson.net/"},"repository":{"type":"git","url":"git://github.com/jaredhanson/passport.git"},"main":"./lib/passport","dependencies":{},"engines":{"node":">= 0.4.0"},"keywords":["express","connect","auth","authn","authentication"],"_npmJsonOpts":{"file":"/Users/jaredhanson/.npm/passport/0.1.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"passport@0.1.0","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.20","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"df29f14d342c4f42f1f42d9329be97b61a04175d","tarball":"http://registry.npmjs.org/passport/-/passport-0.1.0.tgz"},"scripts":{},"maintainers":[{"name":"jaredhanson","email":"jaredhanson@gmail.com"}],"directories":{}},"0.1.1":{"name":"passport","version":"0.1.1","description":"Authentication framework for Connect and Express.","author":{"name":"Jared Hanson","email":"jaredhanson@gmail.com","url":"http://www.jaredhanson.net/"},"repository":{"type":"git","url":"git://github.com/jaredhanson/passport.git"},"main":"./lib/passport","dependencies":{},"engines":{"node":">= 0.4.0"},"keywords":["express","connect","auth","authn","authentication"],"_npmJsonOpts":{"file":"/Users/jaredhanson/.npm/passport/0.1.1/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"passport@0.1.1","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.20","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"293ff63dc2be041a763b77ec027398b77aa357f5","tarball":"http://registry.npmjs.org/passport/-/passport-0.1.1.tgz"},"scripts":{},"maintainers":[{"name":"jaredhanson","email":"jaredhanson@gmail.com"}],"directories":{}},"0.1.2":{"name":"passport","version":"0.1.2","description":"Authentication framework for Connect and Express.","author":{"name":"Jared Hanson","email":"jaredhanson@gmail.com","url":"http://www.jaredhanson.net/"},"repository":{"type":"git","url":"git://github.com/jaredhanson/passport.git"},"main":"./lib/passport","dependencies":{},"engines":{"node":">= 0.4.0"},"keywords":["express","connect","auth","authn","authentication"],"_npmUser":{"name":"jaredhanson","email":"jaredhanson@gmail.com"},"_id":"passport@0.1.2","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.103","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"2b658d95a92d82829ab750987df36e102d130544","tarball":"http://registry.npmjs.org/passport/-/passport-0.1.2.tgz"},"maintainers":[{"name":"jaredhanson","email":"jaredhanson@gmail.com"}],"directories":{}},"0.1.3":{"name":"passport","version":"0.1.3","description":"Authentication framework for Connect and Express.","author":{"name":"Jared Hanson","email":"jaredhanson@gmail.com","url":"http://www.jaredhanson.net/"},"repository":{"type":"git","url":"git://github.com/jaredhanson/passport.git"},"main":"./lib/passport","dependencies":{},"engines":{"node":">= 0.4.0"},"keywords":["express","connect","auth","authn","authentication"],"_npmUser":{"name":"jaredhanson","email":"jaredhanson@gmail.com"},"_id":"passport@0.1.3","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.103","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"a080da6c44f1f37d0d33144f2ab16c79c00226de","tarball":"http://registry.npmjs.org/passport/-/passport-0.1.3.tgz"},"maintainers":[{"name":"jaredhanson","email":"jaredhanson@gmail.com"}],"directories":{}},"0.1.4":{"name":"passport","version":"0.1.4","description":"Simple, unobtrusive authentication for Node.js.","author":{"name":"Jared Hanson","email":"jaredhanson@gmail.com","url":"http://www.jaredhanson.net/"},"repository":{"type":"git","url":"git://github.com/jaredhanson/passport.git"},"main":"./lib/passport","dependencies":{},"engines":{"node":">= 0.4.0"},"keywords":["express","connect","auth","authn","authentication"],"_npmUser":{"name":"jaredhanson","email":"jaredhanson@gmail.com"},"_id":"passport@0.1.4","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.103","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"2b99f61d45b288338f7727728c245cad3818996c","tarball":"http://registry.npmjs.org/passport/-/passport-0.1.4.tgz"},"maintainers":[{"name":"jaredhanson","email":"jaredhanson@gmail.com"}],"directories":{}},"0.1.5":{"name":"passport","version":"0.1.5","description":"Simple, unobtrusive authentication for Node.js.","author":{"name":"Jared Hanson","email":"jaredhanson@gmail.com","url":"http://www.jaredhanson.net/"},"repository":{"type":"git","url":"git://github.com/jaredhanson/passport.git"},"main":"./lib/passport","dependencies":{},"engines":{"node":">= 0.4.0"},"keywords":["express","connect","auth","authn","authentication"],"_npmUser":{"name":"jaredhanson","email":"jaredhanson@gmail.com"},"_id":"passport@0.1.5","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.8","_defaultsLoaded":true,"dist":{"shasum":"c0b2692e9eb158abec716bb19161c366804ce2ad","tarball":"http://registry.npmjs.org/passport/-/passport-0.1.5.tgz"},"maintainers":[{"name":"jaredhanson","email":"jaredhanson@gmail.com"}],"directories":{}},"0.1.6":{"name":"passport","version":"0.1.6","description":"Simple, unobtrusive authentication for Node.js.","author":{"name":"Jared Hanson","email":"jaredhanson@gmail.com","url":"http://www.jaredhanson.net/"},"homepage":"http://passportjs.org/","repository":{"type":"git","url":"git://github.com/jaredhanson/passport.git"},"bugs":{"url":"http://github.com/jaredhanson/passport/issues"},"main":"./lib/passport","dependencies":{"pkginfo":"0.2.x"},"devDependencies":{"vows":"0.6.x"},"engines":{"node":">= 0.4.0"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"}],"keywords":["express","connect","auth","authn","authentication"],"_npmUser":{"name":"jaredhanson","email":"jaredhanson@gmail.com"},"_id":"passport@0.1.6","_engineSupported":true,"_npmVersion":"1.1.0-beta-10","_nodeVersion":"v0.6.7","_defaultsLoaded":true,"dist":{"shasum":"59473457325d5c9a0bfbb1ba5bd751acd7dfa7a7","tarball":"http://registry.npmjs.org/passport/-/passport-0.1.6.tgz"},"readme":"","maintainers":[{"name":"jaredhanson","email":"jaredhanson@gmail.com"}],"directories":{}},"0.1.7":{"name":"passport","version":"0.1.7","description":"Simple, unobtrusive authentication for Node.js.","author":{"name":"Jared Hanson","email":"jaredhanson@gmail.com","url":"http://www.jaredhanson.net/"},"homepage":"http://passportjs.org/","repository":{"type":"git","url":"git://github.com/jaredhanson/passport.git"},"bugs":{"url":"http://github.com/jaredhanson/passport/issues"},"main":"./lib/passport","dependencies":{"pkginfo":"0.2.x"},"devDependencies":{"vows":"0.6.x"},"scripts":{"test":"NODE_PATH=lib node_modules/.bin/vows test/*-test.js test/**/*-test.js test/context/http/*-test.js"},"engines":{"node":">= 0.4.0"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"}],"keywords":["express","connect","auth","authn","authentication"],"_npmUser":{"name":"jaredhanson","email":"jaredhanson@gmail.com"},"_id":"passport@0.1.7","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.1","_nodeVersion":"v0.6.11","_defaultsLoaded":true,"dist":{"shasum":"179072cf77a42f3e387c61c685f7ff2ee2448a3e","tarball":"http://registry.npmjs.org/passport/-/passport-0.1.7.tgz"},"readme":"","maintainers":[{"name":"jaredhanson","email":"jaredhanson@gmail.com"}],"directories":{}},"0.1.8":{"name":"passport","version":"0.1.8","description":"Simple, unobtrusive authentication for Node.js.","author":{"name":"Jared Hanson","email":"jaredhanson@gmail.com","url":"http://www.jaredhanson.net/"},"homepage":"http://passportjs.org/","repository":{"type":"git","url":"git://github.com/jaredhanson/passport.git"},"bugs":{"url":"http://github.com/jaredhanson/passport/issues"},"main":"./lib/passport","dependencies":{"pkginfo":"0.2.x"},"devDependencies":{"vows":"0.6.x"},"scripts":{"test":"NODE_PATH=lib node_modules/.bin/vows test/*-test.js test/**/*-test.js test/context/http/*-test.js"},"engines":{"node":">= 0.4.0"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"}],"keywords":["express","connect","auth","authn","authentication"],"_npmUser":{"name":"jaredhanson","email":"jaredhanson@gmail.com"},"_id":"passport@0.1.8","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.1","_nodeVersion":"v0.6.11","_defaultsLoaded":true,"dist":{"shasum":"21710c998e9f7061e39ee24a50b75c30e41af7c6","tarball":"http://registry.npmjs.org/passport/-/passport-0.1.8.tgz"},"readme":"","maintainers":[{"name":"jaredhanson","email":"jaredhanson@gmail.com"}],"directories":{}},"0.1.9":{"name":"passport","version":"0.1.9","description":"Simple, unobtrusive authentication for Node.js.","author":{"name":"Jared Hanson","email":"jaredhanson@gmail.com","url":"http://www.jaredhanson.net/"},"homepage":"http://passportjs.org/","repository":{"type":"git","url":"git://github.com/jaredhanson/passport.git"},"bugs":{"url":"http://github.com/jaredhanson/passport/issues"},"main":"./lib/passport","dependencies":{"pkginfo":"0.2.x"},"devDependencies":{"vows":"0.6.x"},"scripts":{"test":"NODE_PATH=lib node_modules/.bin/vows test/*-test.js test/**/*-test.js test/context/http/*-test.js"},"engines":{"node":">= 0.4.0"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"}],"keywords":["express","connect","auth","authn","authentication"],"_npmUser":{"name":"jaredhanson","email":"jaredhanson@gmail.com"},"_id":"passport@0.1.9","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.17","_defaultsLoaded":true,"dist":{"shasum":"a22ffa438526a51825f3e0ad7300674a43b6af2e","tarball":"http://registry.npmjs.org/passport/-/passport-0.1.9.tgz"},"readme":"","maintainers":[{"name":"jaredhanson","email":"jaredhanson@gmail.com"}],"directories":{}},"0.1.10":{"name":"passport","version":"0.1.10","description":"Simple, unobtrusive authentication for Node.js.","author":{"name":"Jared Hanson","email":"jaredhanson@gmail.com","url":"http://www.jaredhanson.net/"},"homepage":"http://passportjs.org/","repository":{"type":"git","url":"git://github.com/jaredhanson/passport.git"},"bugs":{"url":"http://github.com/jaredhanson/passport/issues"},"main":"./lib/passport","dependencies":{"pkginfo":"0.2.x"},"devDependencies":{"vows":"0.6.x"},"scripts":{"test":"NODE_PATH=lib node_modules/.bin/vows test/*-test.js test/**/*-test.js test/context/http/*-test.js"},"engines":{"node":">= 0.4.0"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"}],"keywords":["express","connect","auth","authn","authentication"],"_npmUser":{"name":"jaredhanson","email":"jaredhanson@gmail.com"},"_id":"passport@0.1.10","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.17","_defaultsLoaded":true,"dist":{"shasum":"0a392817828fb6fc1347d18d0f339476d6075f94","tarball":"http://registry.npmjs.org/passport/-/passport-0.1.10.tgz"},"readme":"","maintainers":[{"name":"jaredhanson","email":"jaredhanson@gmail.com"}],"directories":{}},"0.1.11":{"name":"passport","version":"0.1.11","description":"Simple, unobtrusive authentication for Node.js.","author":{"name":"Jared Hanson","email":"jaredhanson@gmail.com","url":"http://www.jaredhanson.net/"},"homepage":"http://passportjs.org/","repository":{"type":"git","url":"git://github.com/jaredhanson/passport.git"},"bugs":{"url":"http://github.com/jaredhanson/passport/issues"},"main":"./lib/passport","dependencies":{"pkginfo":"0.2.x"},"devDependencies":{"vows":"0.6.x"},"scripts":{"test":"NODE_PATH=lib node_modules/.bin/vows test/*-test.js test/**/*-test.js test/context/http/*-test.js"},"engines":{"node":">= 0.4.0"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"}],"keywords":["express","connect","auth","authn","authentication"],"_npmUser":{"name":"jaredhanson","email":"jaredhanson@gmail.com"},"_id":"passport@0.1.11","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.17","_defaultsLoaded":true,"dist":{"shasum":"44a45652b89ac3ad672505e6c7d0683fc933d370","tarball":"http://registry.npmjs.org/passport/-/passport-0.1.11.tgz"},"readme":"","maintainers":[{"name":"jaredhanson","email":"jaredhanson@gmail.com"}],"directories":{}},"0.1.12":{"name":"passport","version":"0.1.12","description":"Simple, unobtrusive authentication for Node.js.","author":{"name":"Jared Hanson","email":"jaredhanson@gmail.com","url":"http://www.jaredhanson.net/"},"homepage":"http://passportjs.org/","repository":{"type":"git","url":"git://github.com/jaredhanson/passport.git"},"bugs":{"url":"http://github.com/jaredhanson/passport/issues"},"main":"./lib/passport","dependencies":{"pkginfo":"0.2.x"},"devDependencies":{"vows":"0.6.x"},"scripts":{"test":"NODE_PATH=lib node_modules/.bin/vows test/*-test.js test/**/*-test.js test/context/http/*-test.js"},"engines":{"node":">= 0.4.0"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"}],"keywords":["express","connect","auth","authn","authentication"],"_npmUser":{"name":"jaredhanson","email":"jaredhanson@gmail.com"},"_id":"passport@0.1.12","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.17","_defaultsLoaded":true,"dist":{"shasum":"a3fc6b515933f0a782bfefbc11c6e9f5644fe7d0","tarball":"http://registry.npmjs.org/passport/-/passport-0.1.12.tgz"},"readme":"","maintainers":[{"name":"jaredhanson","email":"jaredhanson@gmail.com"}],"directories":{}},"0.1.13":{"name":"passport","version":"0.1.13","description":"Simple, unobtrusive authentication for Node.js.","author":{"name":"Jared Hanson","email":"jaredhanson@gmail.com","url":"http://www.jaredhanson.net/"},"homepage":"http://passportjs.org/","repository":{"type":"git","url":"git://github.com/jaredhanson/passport.git"},"bugs":{"url":"http://github.com/jaredhanson/passport/issues"},"main":"./lib/passport","dependencies":{"pkginfo":"0.2.x"},"devDependencies":{"vows":"0.6.x"},"scripts":{"test":"NODE_PATH=lib node_modules/.bin/vows test/*-test.js test/**/*-test.js test/context/http/*-test.js"},"engines":{"node":">= 0.4.0"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"}],"keywords":["express","connect","auth","authn","authentication"],"readme":"# Passport\n[http://passportjs.org](http://passportjs.org)\n\nPassport is an authentication framework for [Connect](http://senchalabs.github.com/connect/)\nand [Express](http://expressjs.com/), which is extensible through \"plugins\"\nknown as _strategies_.\n\nPassport is designed to be a general-purpose, yet simple, modular, and\nunobtrusive, authentication framework.  Passport's sole purpose is to\nauthenticate requests.  In being modular, it doesn't force any particular\nauthentication strategy on your application.  In being unobtrusive, it doesn't\nmount routes in your application.  The API is simple: you give Passport a\nrequest to authenticate, and Passport provides hooks for controlling what occurs\nwhen authentication succeeds or fails.\n\n## Installation\n\n    $ npm install passport\n\n## Usage\n\n#### Strategies\n\nPassport uses the concept of strategies to authenticate requests.  Strategies\ncan range from verifying username and password credentials, delegated\nauthentication using [OAuth](http://oauth.net/) (for example, via [Facebook](http://www.facebook.com/)\nor [Twitter](http://twitter.com/)), or federated authentication using [OpenID](http://openid.net/).\n\nBefore asking passport to authenticate a request, the strategy (or strategies)\nused by an application must be configured.\n\n    passport.use(new LocalStrategy(\n      function(username, password, done) {\n        User.findOne({ username: username, password: password }, function (err, user) {\n          done(err, user);\n        });\n      }\n    ));\n\n#### Sessions\n\nPassport will maintain persistent login sessions.  In order for persistent\nsessions to work, the authenticated user must be serialized to the session, and\ndeserialized when subsequent requests are made.\n\nPassport does not impose any restrictions on how your user records are stored.\nInstead, you provide a function to Passport which implements the necessary\nserialization and deserialization logic.  In typical applications, this will be\nas simple as serializing the user ID, and finding the user by ID when\ndeserializing.\n\n    passport.serializeUser(function(user, done) {\n      done(null, user.id);\n    });\n\n    passport.deserializeUser(function(id, done) {\n      User.findById(id, function (err, user) {\n        done(err, user);\n      });\n    });\n\n#### Connect/Express Middleware\n\nTo use Passport in a [Connect](http://senchalabs.github.com/connect/) or\n[Express](http://expressjs.com/)-based application, configure it with the\nrequired `passport.initialize()` middleware.  If your applications uses\npersistent login sessions (recommended, but not required), `passport.session()`\nmiddleware must also be used.\n\n    app.configure(function() {\n      app.use(express.cookieParser());\n      app.use(express.bodyParser());\n      app.use(express.session({ secret: 'keyboard cat' }));\n      app.use(passport.initialize());\n      app.use(passport.session());\n      app.use(app.router);\n      app.use(express.static(__dirname + '/../../public'));\n    });\n\n#### Authenticate Requests\n\nPassport provides an `authenticate()` function (which is standard\nConnect/Express middleware), which is utilized to authenticate requests.\n\nFor example, it can be used as route middleware in an Express application:\n\n    app.post('/login', \n      passport.authenticate('local', { failureRedirect: '/login' }),\n      function(req, res) {\n        res.redirect('/');\n      });\n\n## Examples\n\nFor a complete, working example, refer to the [login example](https://github.com/jaredhanson/passport-local/tree/master/examples/login)\nincluded in [Passport-Local](https://github.com/jaredhanson/passport-local).\n\n## Strategies\n\n- [Local](https://github.com/jaredhanson/passport-local) (username and password)\n- [BrowserID](https://github.com/jaredhanson/passport-browserid)\n- [OpenID](https://github.com/jaredhanson/passport-openid)\n- [OAuth](https://github.com/jaredhanson/passport-oauth) (OAuth 1.0 and 2.0)\n- [SAML](https://github.com/bergie/passport-saml) by [Henri Bergius](https://github.com/bergie)\n- [WS-Federation + SAML 2.0](https://github.com/auth10/passport-wsfed-saml2) by [Auth10](https://github.com/auth10)\n- [WebID](https://github.com/magnetik/passport-webid) by [Baptiste Lafontaine](https://github.com/magnetik)\n- [23andMe](https://github.com/mowens/passport-23andme) by [Michael Owens](https://github.com/mowens)\n- [37signals](https://github.com/jaredhanson/passport-37signals)\n- [500px](https://github.com/jeremybenaim/passport-500px) by [Jeremy Benaim](https://github.com/jeremybenaim)\n- [AngelList](https://github.com/jaredhanson/passport-angellist)\n- [AOL](https://github.com/jaredhanson/passport-aol)\n- [App.net](https://github.com/mowens/passport-appdotnet) by [Michael Owens](https://github.com/mowens)\n- [Bitbucket](https://github.com/jaredhanson/passport-bitbucket)\n- [Buffer](https://github.com/despekiroule/passport-bufferapp) by [Sébastien De Bollivier](https://github.com/despekiroule)\n- [DailyCred](https://github.com/hstove/passport-dailycred) by [Hank Stoever](https://github.com/hstove)\n- [Digg](https://github.com/jaredhanson/passport-digg)\n- [Dropbox](https://github.com/jaredhanson/passport-dropbox)\n- [Dwolla](https://github.com/jaredhanson/passport-dwolla)\n- [Evernote](https://github.com/jaredhanson/passport-evernote)\n- [Facebook](https://github.com/jaredhanson/passport-facebook)\n- [FamilySearch](https://github.com/jaredhanson/passport-familysearch)\n- [Fitbit](https://github.com/jaredhanson/passport-fitbit)\n- [Flattr](https://github.com/freenerd/passport-flattr) by [Johan Uhle](https://github.com/freenerd)\n- [Flickr](https://github.com/johnnyhalife/passport-flickr) by [Johnny Halife](https://github.com/johnnyhalife)\n- [Force.com](https://github.com/joshbirk/passport-forcedotcom) (Salesforce, Database.com) by [Joshua Birk](https://github.com/joshbirk)\n- [Foursquare](https://github.com/jaredhanson/passport-foursquare)\n- [FreedomWorks](https://github.com/carlos8f/passport-freedomworks) by [Carlos Rodriguez](https://github.com/carlos8f)\n- [Geeklist](https://github.com/despekiroule/passport-geeklist) by [Sébastien De Bollivier](https://github.com/despekiroule)\n- [Geoloqi](https://github.com/jaredhanson/passport-geoloqi)\n- [GitHub](https://github.com/jaredhanson/passport-github)\n- [Goodreads](https://github.com/jaredhanson/passport-goodreads)\n- [Google](https://github.com/jaredhanson/passport-google) (OpenID)\n- [Google](https://github.com/jaredhanson/passport-google-oauth) (OAuth 1.0 and 2.0)\n- [Gowalla](https://github.com/jaredhanson/passport-gowalla)\n- [HackID](https://github.com/HackBerkeley/passport-hackid) by [Hackers @ Berkeley](https://github.com/HackBerkeley)\n- [Instagram](https://github.com/jaredhanson/passport-instagram)\n- [Intuit](https://github.com/jaredhanson/passport-intuit) (OpenID)\n- [Intuit](https://github.com/jaredhanson/passport-intuit-oauth) (OAuth 1.0)\n- [Justin.tv](https://github.com/jaredhanson/passport-justintv)\n- [LinkedIn](https://github.com/jaredhanson/passport-linkedin)\n- [me2day](https://github.com/outsideris/passport-me2day) by [JeongHoon Byun](https://github.com/outsideris)\n- [Meetup](https://github.com/jaredhanson/passport-meetup)\n- [Netflix](https://github.com/jaredhanson/passport-netflix)\n- [Odnoklassniki](https://github.com/ozon1234/passport-odnoklassniki) by [Alexey Kozlov](https://github.com/ozon1234)\n- [Ohloh](https://github.com/jaredhanson/passport-ohloh)\n- [OpenStreetMap](https://github.com/jaredhanson/passport-openstreetmap)\n- [PayPal](https://github.com/jaredhanson/passport-paypal) (OpenID)\n- [PayPal](https://github.com/jaredhanson/passport-paypal-oauth) (OAuth 2.0)\n- [picplz](https://github.com/jaredhanson/passport-picplz)\n- [Rdio](https://github.com/jaredhanson/passport-rdio)\n- [Readability](https://github.com/jaredhanson/passport-readability)\n- [RunKeeper](https://github.com/jaredhanson/passport-runkeeper)\n- [SmugMug](https://github.com/jaredhanson/passport-smugmug)\n- [SoundCloud](https://github.com/jaredhanson/passport-soundcloud)\n- [StatusNet](https://github.com/zoowar/passport-statusnet) by [ZooWar](https://github.com/zoowar)\n- [Steam](https://github.com/liamcurry/passport-steam) by [Liam Curry](https://github.com/liamcurry)\n- [SUPINFO](https://github.com/godezinc/passport-supinfo) by [Vincent PEYROUSE](https://github.com/GodezInc)\n- [TripIt](https://github.com/jaredhanson/passport-tripit)\n- [Tumblr](https://github.com/jaredhanson/passport-tumblr)\n- [Twitter](https://github.com/jaredhanson/passport-twitter)\n- [TxSSC](https://github.com/TxSSC/passport-txssc) by [Texas School Safety Center](https://github.com/TxSSC)\n- [Urlship](https://github.com/urlship/passport-urlship) by [Urlship](https://github.com/urlship)\n- [Vimeo](https://github.com/jaredhanson/passport-vimeo)\n- [VKontakte](https://github.com/stevebest/passport-vkontakte) by [Stepan Stolyarov](https://github.com/stevebest)\n- [Windows Live](https://github.com/jaredhanson/passport-windowslive)\n- [Withings](https://github.com/mowens/passport-withings) by [Michael Owens](https://github.com/mowens)\n- [Yahoo!](https://github.com/jaredhanson/passport-yahoo) (OpenID)\n- [Yahoo!](https://github.com/jaredhanson/passport-yahoo-oauth) (OAuth 1.0)\n- [Yammer](https://github.com/jaredhanson/passport-yammer)\n- [Yandex](https://github.com/gurugray/passport-yandex) by [Sergey Sergeev](https://github.com/gurugray)\n- [OpenSSO](https://github.com/oroce/passport-opensso) by [Róbert Oroszi](https://github.com/oroce)\n- [OpenAM](https://github.com/alesium/passport-openam) by [Alesium](https://github.com/alesium)\n- [Drupal](https://github.com/mixmarket/passport-drupal) by [Victor Kareh](https://github.com/vkareh) (for Drupal-powered sites using [OAuth Login Provider](http://drupal.org/project/oauthloginprovider) module)\n- [HTTP](https://github.com/jaredhanson/passport-http) (HTTP Basic and Digest schemes)\n- [HTTP-Bearer](https://github.com/jaredhanson/passport-http-bearer) (HTTP Bearer scheme)\n- [HTTP-OAuth](https://github.com/jaredhanson/passport-http-oauth) (HTTP OAuth scheme)\n- [OAuth2-Client-Password](https://github.com/jaredhanson/passport-oauth2-client-password) (OAuth 2.0 client password)\n- [Hash](https://github.com/yuri-karadzhov/passport-hash) (hash parameter) by [Yuri Karadzhov](https://github.com/yuri-karadzhov)\n- [Anonymous](https://github.com/jaredhanson/passport-anonymous)\n- [Dummy](https://github.com/developmentseed/passport-dummy) by [Development Seed](https://github.com/developmentseed)\n\n**Attention Developers:** If you implement a new authentication strategy for\nPassport, send me a message and I will update the list.\n\n## Tests\n\n    $ npm install --dev\n    $ make test\n\n[![Build Status](https://secure.travis-ci.org/jaredhanson/passport.png)](http://travis-ci.org/jaredhanson/passport)\n\n## Credits\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2011 Jared Hanson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"passport@0.1.13","dist":{"shasum":"3ac291f19e7cde3e185dcff02c12c8a4227f6d4a","tarball":"http://registry.npmjs.org/passport/-/passport-0.1.13.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"jaredhanson","email":"jaredhanson@gmail.com"},"maintainers":[{"name":"jaredhanson","email":"jaredhanson@gmail.com"}],"directories":{}},"0.1.14":{"name":"passport","version":"0.1.14","description":"Simple, unobtrusive authentication for Node.js.","author":{"name":"Jared Hanson","email":"jaredhanson@gmail.com","url":"http://www.jaredhanson.net/"},"homepage":"http://passportjs.org/","repository":{"type":"git","url":"git://github.com/jaredhanson/passport.git"},"bugs":{"url":"http://github.com/jaredhanson/passport/issues"},"main":"./lib/passport","dependencies":{"pkginfo":"0.2.x"},"devDependencies":{"vows":"0.6.x"},"scripts":{"test":"NODE_PATH=lib node_modules/.bin/vows test/*-test.js test/**/*-test.js test/context/http/*-test.js"},"engines":{"node":">= 0.4.0"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"}],"keywords":["express","connect","auth","authn","authentication"],"readme":"# Passport\n[http://passportjs.org](http://passportjs.org)\n\nPassport is an authentication framework for [Connect](http://senchalabs.github.com/connect/)\nand [Express](http://expressjs.com/), which is extensible through \"plugins\"\nknown as _strategies_.\n\nPassport is designed to be a general-purpose, yet simple, modular, and\nunobtrusive, authentication framework.  Passport's sole purpose is to\nauthenticate requests.  In being modular, it doesn't force any particular\nauthentication strategy on your application.  In being unobtrusive, it doesn't\nmount routes in your application.  The API is simple: you give Passport a\nrequest to authenticate, and Passport provides hooks for controlling what occurs\nwhen authentication succeeds or fails.\n\n## Installation\n\n    $ npm install passport\n\n## Usage\n\n#### Strategies\n\nPassport uses the concept of strategies to authenticate requests.  Strategies\ncan range from verifying username and password credentials, delegated\nauthentication using [OAuth](http://oauth.net/) (for example, via [Facebook](http://www.facebook.com/)\nor [Twitter](http://twitter.com/)), or federated authentication using [OpenID](http://openid.net/).\n\nBefore asking passport to authenticate a request, the strategy (or strategies)\nused by an application must be configured.\n\n    passport.use(new LocalStrategy(\n      function(username, password, done) {\n        User.findOne({ username: username, password: password }, function (err, user) {\n          done(err, user);\n        });\n      }\n    ));\n\n#### Sessions\n\nPassport will maintain persistent login sessions.  In order for persistent\nsessions to work, the authenticated user must be serialized to the session, and\ndeserialized when subsequent requests are made.\n\nPassport does not impose any restrictions on how your user records are stored.\nInstead, you provide a function to Passport which implements the necessary\nserialization and deserialization logic.  In typical applications, this will be\nas simple as serializing the user ID, and finding the user by ID when\ndeserializing.\n\n    passport.serializeUser(function(user, done) {\n      done(null, user.id);\n    });\n\n    passport.deserializeUser(function(id, done) {\n      User.findById(id, function (err, user) {\n        done(err, user);\n      });\n    });\n\n#### Connect/Express Middleware\n\nTo use Passport in a [Connect](http://senchalabs.github.com/connect/) or\n[Express](http://expressjs.com/)-based application, configure it with the\nrequired `passport.initialize()` middleware.  If your applications uses\npersistent login sessions (recommended, but not required), `passport.session()`\nmiddleware must also be used.\n\n    app.configure(function() {\n      app.use(express.cookieParser());\n      app.use(express.bodyParser());\n      app.use(express.session({ secret: 'keyboard cat' }));\n      app.use(passport.initialize());\n      app.use(passport.session());\n      app.use(app.router);\n      app.use(express.static(__dirname + '/../../public'));\n    });\n\n#### Authenticate Requests\n\nPassport provides an `authenticate()` function (which is standard\nConnect/Express middleware), which is utilized to authenticate requests.\n\nFor example, it can be used as route middleware in an Express application:\n\n    app.post('/login', \n      passport.authenticate('local', { failureRedirect: '/login' }),\n      function(req, res) {\n        res.redirect('/');\n      });\n\n## Examples\n\nFor a complete, working example, refer to the [login example](https://github.com/jaredhanson/passport-local/tree/master/examples/login)\nincluded in [Passport-Local](https://github.com/jaredhanson/passport-local).\n\n## Strategies\n\n- [Local](https://github.com/jaredhanson/passport-local) (username and password)\n- [BrowserID](https://github.com/jaredhanson/passport-browserid)\n- [OpenID](https://github.com/jaredhanson/passport-openid)\n- [OAuth](https://github.com/jaredhanson/passport-oauth) (OAuth 1.0 and 2.0)\n- [SAML](https://github.com/bergie/passport-saml) by [Henri Bergius](https://github.com/bergie)\n- [WS-Federation + SAML 2.0](https://github.com/auth10/passport-wsfed-saml2) by [Auth10](https://github.com/auth10)\n- [WebID](https://github.com/magnetik/passport-webid) by [Baptiste Lafontaine](https://github.com/magnetik)\n- [23andMe](https://github.com/mowens/passport-23andme) by [Michael Owens](https://github.com/mowens)\n- [37signals](https://github.com/jaredhanson/passport-37signals)\n- [500px](https://github.com/jeremybenaim/passport-500px) by [Jeremy Benaim](https://github.com/jeremybenaim)\n- [AngelList](https://github.com/jaredhanson/passport-angellist)\n- [AOL](https://github.com/jaredhanson/passport-aol)\n- [App.net](https://github.com/mowens/passport-appdotnet) by [Michael Owens](https://github.com/mowens)\n- [Bitbucket](https://github.com/jaredhanson/passport-bitbucket)\n- [Buffer](https://github.com/despekiroule/passport-bufferapp) by [Sébastien De Bollivier](https://github.com/despekiroule)\n- [DailyCred](https://github.com/hstove/passport-dailycred) by [Hank Stoever](https://github.com/hstove)\n- [Digg](https://github.com/jaredhanson/passport-digg)\n- [Dropbox](https://github.com/jaredhanson/passport-dropbox)\n- [Dwolla](https://github.com/jaredhanson/passport-dwolla)\n- [Evernote](https://github.com/jaredhanson/passport-evernote)\n- [Facebook](https://github.com/jaredhanson/passport-facebook)\n- [FamilySearch](https://github.com/jaredhanson/passport-familysearch)\n- [Fitbit](https://github.com/jaredhanson/passport-fitbit)\n- [Flattr](https://github.com/freenerd/passport-flattr) by [Johan Uhle](https://github.com/freenerd)\n- [Flickr](https://github.com/johnnyhalife/passport-flickr) by [Johnny Halife](https://github.com/johnnyhalife)\n- [Force.com](https://github.com/joshbirk/passport-forcedotcom) (Salesforce, Database.com) by [Joshua Birk](https://github.com/joshbirk)\n- [Foursquare](https://github.com/jaredhanson/passport-foursquare)\n- [FreedomWorks](https://github.com/carlos8f/passport-freedomworks) by [Carlos Rodriguez](https://github.com/carlos8f)\n- [Geeklist](https://github.com/despekiroule/passport-geeklist) by [Sébastien De Bollivier](https://github.com/despekiroule)\n- [Geoloqi](https://github.com/jaredhanson/passport-geoloqi)\n- [GitHub](https://github.com/jaredhanson/passport-github)\n- [Goodreads](https://github.com/jaredhanson/passport-goodreads)\n- [Google](https://github.com/jaredhanson/passport-google) (OpenID)\n- [Google](https://github.com/jaredhanson/passport-google-oauth) (OAuth 1.0 and 2.0)\n- [Gowalla](https://github.com/jaredhanson/passport-gowalla)\n- [HackID](https://github.com/HackBerkeley/passport-hackid) by [Hackers @ Berkeley](https://github.com/HackBerkeley)\n- [Instagram](https://github.com/jaredhanson/passport-instagram)\n- [Intuit](https://github.com/jaredhanson/passport-intuit) (OpenID)\n- [Intuit](https://github.com/jaredhanson/passport-intuit-oauth) (OAuth 1.0)\n- [Justin.tv](https://github.com/jaredhanson/passport-justintv)\n- [LinkedIn](https://github.com/jaredhanson/passport-linkedin)\n- [me2day](https://github.com/outsideris/passport-me2day) by [JeongHoon Byun](https://github.com/outsideris)\n- [Meetup](https://github.com/jaredhanson/passport-meetup)\n- [Netflix](https://github.com/jaredhanson/passport-netflix)\n- [Odnoklassniki](https://github.com/ozon1234/passport-odnoklassniki) by [Alexey Kozlov](https://github.com/ozon1234)\n- [Ohloh](https://github.com/jaredhanson/passport-ohloh)\n- [OpenStreetMap](https://github.com/jaredhanson/passport-openstreetmap)\n- [PayPal](https://github.com/jaredhanson/passport-paypal) (OpenID)\n- [PayPal](https://github.com/jaredhanson/passport-paypal-oauth) (OAuth 2.0)\n- [picplz](https://github.com/jaredhanson/passport-picplz)\n- [Rdio](https://github.com/jaredhanson/passport-rdio)\n- [Readability](https://github.com/jaredhanson/passport-readability)\n- [RunKeeper](https://github.com/jaredhanson/passport-runkeeper)\n- [SmugMug](https://github.com/jaredhanson/passport-smugmug)\n- [SoundCloud](https://github.com/jaredhanson/passport-soundcloud)\n- [StatusNet](https://github.com/zoowar/passport-statusnet) by [ZooWar](https://github.com/zoowar)\n- [Steam](https://github.com/liamcurry/passport-steam) by [Liam Curry](https://github.com/liamcurry)\n- [SUPINFO](https://github.com/godezinc/passport-supinfo) by [Vincent PEYROUSE](https://github.com/GodezInc)\n- [TripIt](https://github.com/jaredhanson/passport-tripit)\n- [Tumblr](https://github.com/jaredhanson/passport-tumblr)\n- [Twitter](https://github.com/jaredhanson/passport-twitter)\n- [TxSSC](https://github.com/TxSSC/passport-txssc) by [Texas School Safety Center](https://github.com/TxSSC)\n- [Urlship](https://github.com/urlship/passport-urlship) by [Urlship](https://github.com/urlship)\n- [Vimeo](https://github.com/jaredhanson/passport-vimeo)\n- [VKontakte](https://github.com/stevebest/passport-vkontakte) by [Stepan Stolyarov](https://github.com/stevebest)\n- [Windows Live](https://github.com/jaredhanson/passport-windowslive)\n- [Withings](https://github.com/mowens/passport-withings) by [Michael Owens](https://github.com/mowens)\n- [Yahoo!](https://github.com/jaredhanson/passport-yahoo) (OpenID)\n- [Yahoo!](https://github.com/jaredhanson/passport-yahoo-oauth) (OAuth 1.0)\n- [Yammer](https://github.com/jaredhanson/passport-yammer)\n- [Yandex](https://github.com/gurugray/passport-yandex) by [Sergey Sergeev](https://github.com/gurugray)\n- [OpenSSO](https://github.com/oroce/passport-opensso) by [Róbert Oroszi](https://github.com/oroce)\n- [OpenAM](https://github.com/alesium/passport-openam) by [Alesium](https://github.com/alesium)\n- [Drupal](https://github.com/mixmarket/passport-drupal) by [Victor Kareh](https://github.com/vkareh) (for Drupal-powered sites using [OAuth Login Provider](http://drupal.org/project/oauthloginprovider) module)\n- [HTTP](https://github.com/jaredhanson/passport-http) (HTTP Basic and Digest schemes)\n- [HTTP-Bearer](https://github.com/jaredhanson/passport-http-bearer) (HTTP Bearer scheme)\n- [HTTP-OAuth](https://github.com/jaredhanson/passport-http-oauth) (HTTP OAuth scheme)\n- [OAuth2-Client-Password](https://github.com/jaredhanson/passport-oauth2-client-password) (OAuth 2.0 client password)\n- [Hash](https://github.com/yuri-karadzhov/passport-hash) (hash parameter) by [Yuri Karadzhov](https://github.com/yuri-karadzhov)\n- [Anonymous](https://github.com/jaredhanson/passport-anonymous)\n- [Dummy](https://github.com/developmentseed/passport-dummy) by [Development Seed](https://github.com/developmentseed)\n\n**Attention Developers:** If you implement a new authentication strategy for\nPassport, send me a message and I will update the list.\n\n## Tests\n\n    $ npm install --dev\n    $ make test\n\n[![Build Status](https://secure.travis-ci.org/jaredhanson/passport.png)](http://travis-ci.org/jaredhanson/passport)\n\n## Credits\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2011 Jared Hanson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"passport@0.1.14","dist":{"shasum":"d63358e7df8689e43566537c0ba0e799eed400bd","tarball":"http://registry.npmjs.org/passport/-/passport-0.1.14.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"jaredhanson","email":"jaredhanson@gmail.com"},"maintainers":[{"name":"jaredhanson","email":"jaredhanson@gmail.com"}],"directories":{}},"0.1.15":{"name":"passport","version":"0.1.15","description":"Simple, unobtrusive authentication for Node.js.","author":{"name":"Jared Hanson","email":"jaredhanson@gmail.com","url":"http://www.jaredhanson.net/"},"homepage":"http://passportjs.org/","repository":{"type":"git","url":"git://github.com/jaredhanson/passport.git"},"bugs":{"url":"http://github.com/jaredhanson/passport/issues"},"main":"./lib/passport","dependencies":{"pkginfo":"0.2.x"},"devDependencies":{"vows":"0.6.x"},"scripts":{"test":"NODE_PATH=lib node_modules/.bin/vows test/*-test.js test/**/*-test.js test/context/http/*-test.js"},"engines":{"node":">= 0.4.0"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"}],"keywords":["express","connect","auth","authn","authentication"],"readme":"# Passport\n[http://passportjs.org](http://passportjs.org)\n\nPassport is an authentication framework for [Connect](http://senchalabs.github.com/connect/)\nand [Express](http://expressjs.com/), which is extensible through \"plugins\"\nknown as _strategies_.\n\nPassport is designed to be a general-purpose, yet simple, modular, and\nunobtrusive, authentication framework.  Passport's sole purpose is to\nauthenticate requests.  In being modular, it doesn't force any particular\nauthentication strategy on your application.  In being unobtrusive, it doesn't\nmount routes in your application.  The API is simple: you give Passport a\nrequest to authenticate, and Passport provides hooks for controlling what occurs\nwhen authentication succeeds or fails.\n\n## Installation\n\n    $ npm install passport\n\n## Usage\n\n#### Strategies\n\nPassport uses the concept of strategies to authenticate requests.  Strategies\ncan range from verifying username and password credentials, delegated\nauthentication using [OAuth](http://oauth.net/) (for example, via [Facebook](http://www.facebook.com/)\nor [Twitter](http://twitter.com/)), or federated authentication using [OpenID](http://openid.net/).\n\nBefore asking passport to authenticate a request, the strategy (or strategies)\nused by an application must be configured.\n\n    passport.use(new LocalStrategy(\n      function(username, password, done) {\n        User.findOne({ username: username, password: password }, function (err, user) {\n          done(err, user);\n        });\n      }\n    ));\n\n#### Sessions\n\nPassport will maintain persistent login sessions.  In order for persistent\nsessions to work, the authenticated user must be serialized to the session, and\ndeserialized when subsequent requests are made.\n\nPassport does not impose any restrictions on how your user records are stored.\nInstead, you provide a function to Passport which implements the necessary\nserialization and deserialization logic.  In typical applications, this will be\nas simple as serializing the user ID, and finding the user by ID when\ndeserializing.\n\n    passport.serializeUser(function(user, done) {\n      done(null, user.id);\n    });\n\n    passport.deserializeUser(function(id, done) {\n      User.findById(id, function (err, user) {\n        done(err, user);\n      });\n    });\n\n#### Connect/Express Middleware\n\nTo use Passport in a [Connect](http://senchalabs.github.com/connect/) or\n[Express](http://expressjs.com/)-based application, configure it with the\nrequired `passport.initialize()` middleware.  If your applications uses\npersistent login sessions (recommended, but not required), `passport.session()`\nmiddleware must also be used.\n\n    app.configure(function() {\n      app.use(express.cookieParser());\n      app.use(express.bodyParser());\n      app.use(express.session({ secret: 'keyboard cat' }));\n      app.use(passport.initialize());\n      app.use(passport.session());\n      app.use(app.router);\n      app.use(express.static(__dirname + '/../../public'));\n    });\n\n#### Authenticate Requests\n\nPassport provides an `authenticate()` function (which is standard\nConnect/Express middleware), which is utilized to authenticate requests.\n\nFor example, it can be used as route middleware in an Express application:\n\n    app.post('/login', \n      passport.authenticate('local', { failureRedirect: '/login' }),\n      function(req, res) {\n        res.redirect('/');\n      });\n\n## Examples\n\nFor a complete, working example, refer to the [login example](https://github.com/jaredhanson/passport-local/tree/master/examples/login)\nincluded in [Passport-Local](https://github.com/jaredhanson/passport-local).\n\n## Strategies\n\n- [Local](https://github.com/jaredhanson/passport-local) (username and password)\n- [BrowserID](https://github.com/jaredhanson/passport-browserid)\n- [OpenID](https://github.com/jaredhanson/passport-openid)\n- [OAuth](https://github.com/jaredhanson/passport-oauth) (OAuth 1.0 and 2.0)\n- [SAML](https://github.com/bergie/passport-saml) by [Henri Bergius](https://github.com/bergie)\n- [WS-Federation + SAML 2.0](https://github.com/auth10/passport-wsfed-saml2) by [Auth10](https://github.com/auth10)\n- [WebID](https://github.com/magnetik/passport-webid) by [Baptiste Lafontaine](https://github.com/magnetik)\n- [23andMe](https://github.com/mowens/passport-23andme) by [Michael Owens](https://github.com/mowens)\n- [37signals](https://github.com/jaredhanson/passport-37signals)\n- [500px](https://github.com/jeremybenaim/passport-500px) by [Jeremy Benaim](https://github.com/jeremybenaim)\n- [AngelList](https://github.com/jaredhanson/passport-angellist)\n- [AOL](https://github.com/jaredhanson/passport-aol)\n- [App.net](https://github.com/mowens/passport-appdotnet) by [Michael Owens](https://github.com/mowens)\n- [Bitbucket](https://github.com/jaredhanson/passport-bitbucket)\n- [Buffer](https://github.com/despekiroule/passport-bufferapp) by [Sébastien De Bollivier](https://github.com/despekiroule)\n- [DailyCred](https://github.com/hstove/passport-dailycred) by [Hank Stoever](https://github.com/hstove)\n- [Digg](https://github.com/jaredhanson/passport-digg)\n- [Dropbox](https://github.com/jaredhanson/passport-dropbox)\n- [Dwolla](https://github.com/jaredhanson/passport-dwolla)\n- [Evernote](https://github.com/jaredhanson/passport-evernote)\n- [Facebook](https://github.com/jaredhanson/passport-facebook)\n- [FamilySearch](https://github.com/jaredhanson/passport-familysearch)\n- [Fitbit](https://github.com/jaredhanson/passport-fitbit)\n- [Flattr](https://github.com/freenerd/passport-flattr) by [Johan Uhle](https://github.com/freenerd)\n- [Flickr](https://github.com/johnnyhalife/passport-flickr) by [Johnny Halife](https://github.com/johnnyhalife)\n- [Force.com](https://github.com/joshbirk/passport-forcedotcom) (Salesforce, Database.com) by [Joshua Birk](https://github.com/joshbirk)\n- [Foursquare](https://github.com/jaredhanson/passport-foursquare)\n- [FreedomWorks](https://github.com/carlos8f/passport-freedomworks) by [Carlos Rodriguez](https://github.com/carlos8f)\n- [Geeklist](https://github.com/despekiroule/passport-geeklist) by [Sébastien De Bollivier](https://github.com/despekiroule)\n- [Geoloqi](https://github.com/jaredhanson/passport-geoloqi)\n- [GitHub](https://github.com/jaredhanson/passport-github)\n- [Goodreads](https://github.com/jaredhanson/passport-goodreads)\n- [Google](https://github.com/jaredhanson/passport-google) (OpenID)\n- [Google](https://github.com/jaredhanson/passport-google-oauth) (OAuth 1.0 and 2.0)\n- [Gowalla](https://github.com/jaredhanson/passport-gowalla)\n- [HackID](https://github.com/HackBerkeley/passport-hackid) by [Hackers @ Berkeley](https://github.com/HackBerkeley)\n- [Instagram](https://github.com/jaredhanson/passport-instagram)\n- [Intuit](https://github.com/jaredhanson/passport-intuit) (OpenID)\n- [Intuit](https://github.com/jaredhanson/passport-intuit-oauth) (OAuth 1.0)\n- [Justin.tv](https://github.com/jaredhanson/passport-justintv)\n- [LinkedIn](https://github.com/jaredhanson/passport-linkedin)\n- [me2day](https://github.com/outsideris/passport-me2day) by [JeongHoon Byun](https://github.com/outsideris)\n- [Meetup](https://github.com/jaredhanson/passport-meetup)\n- [Netflix](https://github.com/jaredhanson/passport-netflix)\n- [Odnoklassniki](https://github.com/ozon1234/passport-odnoklassniki) by [Alexey Kozlov](https://github.com/ozon1234)\n- [Ohloh](https://github.com/jaredhanson/passport-ohloh)\n- [OpenStreetMap](https://github.com/jaredhanson/passport-openstreetmap)\n- [PayPal](https://github.com/jaredhanson/passport-paypal) (OpenID)\n- [PayPal](https://github.com/jaredhanson/passport-paypal-oauth) (OAuth 2.0)\n- [picplz](https://github.com/jaredhanson/passport-picplz)\n- [Rdio](https://github.com/jaredhanson/passport-rdio)\n- [Readability](https://github.com/jaredhanson/passport-readability)\n- [RunKeeper](https://github.com/jaredhanson/passport-runkeeper)\n- [SmugMug](https://github.com/jaredhanson/passport-smugmug)\n- [SoundCloud](https://github.com/jaredhanson/passport-soundcloud)\n- [StatusNet](https://github.com/zoowar/passport-statusnet) by [ZooWar](https://github.com/zoowar)\n- [Steam](https://github.com/liamcurry/passport-steam) by [Liam Curry](https://github.com/liamcurry)\n- [SUPINFO](https://github.com/godezinc/passport-supinfo) by [Vincent PEYROUSE](https://github.com/GodezInc)\n- [TripIt](https://github.com/jaredhanson/passport-tripit)\n- [Tumblr](https://github.com/jaredhanson/passport-tumblr)\n- [Twitter](https://github.com/jaredhanson/passport-twitter)\n- [TxSSC](https://github.com/TxSSC/passport-txssc) by [Texas School Safety Center](https://github.com/TxSSC)\n- [Urlship](https://github.com/urlship/passport-urlship) by [Urlship](https://github.com/urlship)\n- [Vimeo](https://github.com/jaredhanson/passport-vimeo)\n- [VKontakte](https://github.com/stevebest/passport-vkontakte) by [Stepan Stolyarov](https://github.com/stevebest)\n- [Windows Live](https://github.com/jaredhanson/passport-windowslive)\n- [Withings](https://github.com/mowens/passport-withings) by [Michael Owens](https://github.com/mowens)\n- [Yahoo!](https://github.com/jaredhanson/passport-yahoo) (OpenID)\n- [Yahoo!](https://github.com/jaredhanson/passport-yahoo-oauth) (OAuth 1.0)\n- [Yammer](https://github.com/jaredhanson/passport-yammer)\n- [Yandex](https://github.com/gurugray/passport-yandex) by [Sergey Sergeev](https://github.com/gurugray)\n- [OpenSSO](https://github.com/oroce/passport-opensso) by [Róbert Oroszi](https://github.com/oroce)\n- [OpenAM](https://github.com/alesium/passport-openam) by [Alesium](https://github.com/alesium)\n- [Drupal](https://github.com/mixmarket/passport-drupal) by [Victor Kareh](https://github.com/vkareh) (for Drupal-powered sites using [OAuth Login Provider](http://drupal.org/project/oauthloginprovider) module)\n- [HTTP](https://github.com/jaredhanson/passport-http) (HTTP Basic and Digest schemes)\n- [HTTP-Bearer](https://github.com/jaredhanson/passport-http-bearer) (HTTP Bearer scheme)\n- [HTTP-OAuth](https://github.com/jaredhanson/passport-http-oauth) (HTTP OAuth scheme)\n- [OAuth2-Client-Password](https://github.com/jaredhanson/passport-oauth2-client-password) (OAuth 2.0 client password)\n- [Hash](https://github.com/yuri-karadzhov/passport-hash) (hash parameter) by [Yuri Karadzhov](https://github.com/yuri-karadzhov)\n- [Anonymous](https://github.com/jaredhanson/passport-anonymous)\n- [Dummy](https://github.com/developmentseed/passport-dummy) by [Development Seed](https://github.com/developmentseed)\n\n**Attention Developers:** If you implement a new authentication strategy for\nPassport, send me a message and I will update the list.\n\n## Tests\n\n    $ npm install --dev\n    $ make test\n\n[![Build Status](https://secure.travis-ci.org/jaredhanson/passport.png)](http://travis-ci.org/jaredhanson/passport)\n\n## Credits\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2011 Jared Hanson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","_id":"passport@0.1.15","dist":{"shasum":"c80fd11ee3b16142ae32d4be964a6fa041843f10","tarball":"http://registry.npmjs.org/passport/-/passport-0.1.15.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"jaredhanson","email":"jaredhanson@gmail.com"},"maintainers":[{"name":"jaredhanson","email":"jaredhanson@gmail.com"}],"directories":{}},"0.1.16":{"name":"passport","version":"0.1.16","description":"Simple, unobtrusive authentication for Node.js.","keywords":["express","connect","auth","authn","authentication"],"homepage":"http://passportjs.org/","repository":{"type":"git","url":"git://github.com/jaredhanson/passport.git"},"bugs":{"url":"http://github.com/jaredhanson/passport/issues"},"author":{"name":"Jared Hanson","email":"jaredhanson@gmail.com","url":"http://www.jaredhanson.net/"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"}],"main":"./lib/passport","dependencies":{"pkginfo":"0.2.x"},"devDependencies":{"vows":"0.6.x"},"scripts":{"test":"NODE_PATH=lib node_modules/.bin/vows test/*-test.js test/**/*-test.js test/context/http/*-test.js"},"engines":{"node":">= 0.4.0"},"readme":"# Passport\n[http://passportjs.org](http://passportjs.org)\n\nPassport is an authentication framework for [Connect](http://senchalabs.github.com/connect/)\nand [Express](http://expressjs.com/), which is extensible through \"plugins\"\nknown as _strategies_.\n\nPassport is designed to be a general-purpose, yet simple, modular, and\nunobtrusive, authentication framework.  Passport's sole purpose is to\nauthenticate requests.  In being modular, it doesn't force any particular\nauthentication strategy on your application.  In being unobtrusive, it doesn't\nmount routes in your application.  The API is simple: you give Passport a\nrequest to authenticate, and Passport provides hooks for controlling what occurs\nwhen authentication succeeds or fails.\n\n## Install\n\n    $ npm install passport\n\n## Usage\n\n#### Strategies\n\nPassport uses the concept of strategies to authenticate requests.  Strategies\ncan range from verifying username and password credentials, delegated\nauthentication using [OAuth](http://oauth.net/) (for example, via [Facebook](http://www.facebook.com/)\nor [Twitter](http://twitter.com/)), or federated authentication using [OpenID](http://openid.net/).\n\nBefore asking passport to authenticate a request, the strategy (or strategies)\nused by an application must be configured.\n\n    passport.use(new LocalStrategy(\n      function(username, password, done) {\n        User.findOne({ username: username, password: password }, function (err, user) {\n          done(err, user);\n        });\n      }\n    ));\n\n#### Sessions\n\nPassport will maintain persistent login sessions.  In order for persistent\nsessions to work, the authenticated user must be serialized to the session, and\ndeserialized when subsequent requests are made.\n\nPassport does not impose any restrictions on how your user records are stored.\nInstead, you provide a function to Passport which implements the necessary\nserialization and deserialization logic.  In typical applications, this will be\nas simple as serializing the user ID, and finding the user by ID when\ndeserializing.\n\n    passport.serializeUser(function(user, done) {\n      done(null, user.id);\n    });\n\n    passport.deserializeUser(function(id, done) {\n      User.findById(id, function (err, user) {\n        done(err, user);\n      });\n    });\n\n#### Connect/Express Middleware\n\nTo use Passport in a [Connect](http://senchalabs.github.com/connect/) or\n[Express](http://expressjs.com/)-based application, configure it with the\nrequired `passport.initialize()` middleware.  If your applications uses\npersistent login sessions (recommended, but not required), `passport.session()`\nmiddleware must also be used.\n\n    app.configure(function() {\n      app.use(express.cookieParser());\n      app.use(express.bodyParser());\n      app.use(express.session({ secret: 'keyboard cat' }));\n      app.use(passport.initialize());\n      app.use(passport.session());\n      app.use(app.router);\n      app.use(express.static(__dirname + '/../../public'));\n    });\n\n#### Authenticate Requests\n\nPassport provides an `authenticate()` function (which is standard\nConnect/Express middleware), which is utilized to authenticate requests.\n\nFor example, it can be used as route middleware in an Express application:\n\n    app.post('/login', \n      passport.authenticate('local', { failureRedirect: '/login' }),\n      function(req, res) {\n        res.redirect('/');\n      });\n\n## Examples\n\nFor a complete, working example, refer to the [login example](https://github.com/jaredhanson/passport-local/tree/master/examples/login)\nincluded in [Passport-Local](https://github.com/jaredhanson/passport-local).\n\n## Strategies\n\n- [Local](https://github.com/jaredhanson/passport-local) (username and password)\n- [BrowserID](https://github.com/jaredhanson/passport-browserid)\n- [OpenID](https://github.com/jaredhanson/passport-openid)\n- [OAuth](https://github.com/jaredhanson/passport-oauth) (OAuth 1.0 and 2.0)\n- [SAML](https://github.com/bergie/passport-saml) by [Henri Bergius](https://github.com/bergie)\n- [WS-Federation + SAML 2.0](https://github.com/auth10/passport-wsfed-saml2) by [Auth10](https://github.com/auth10)\n- [WebID](https://github.com/magnetik/passport-webid) by [Baptiste Lafontaine](https://github.com/magnetik)\n- [23andMe](https://github.com/mowens/passport-23andme) by [Michael Owens](https://github.com/mowens)\n- [37signals](https://github.com/jaredhanson/passport-37signals)\n- [500px](https://github.com/jeremybenaim/passport-500px) by [Jeremy Benaim](https://github.com/jeremybenaim)\n- [AngelList](https://github.com/jaredhanson/passport-angellist)\n- [AOL](https://github.com/jaredhanson/passport-aol)\n- [App.net](https://github.com/mowens/passport-appdotnet) by [Michael Owens](https://github.com/mowens)\n- [Bitbucket](https://github.com/jaredhanson/passport-bitbucket)\n- [Buffer](https://github.com/despekiroule/passport-bufferapp) by [Sébastien De Bollivier](https://github.com/despekiroule)\n- [DailyCred](https://github.com/hstove/passport-dailycred) by [Hank Stoever](https://github.com/hstove)\n- [Digg](https://github.com/jaredhanson/passport-digg)\n- [doctape](https://github.com/doctape/passport-doctape)\n- [Dropbox](https://github.com/jaredhanson/passport-dropbox)\n- [Dwolla](https://github.com/jaredhanson/passport-dwolla)\n- [Evernote](https://github.com/jaredhanson/passport-evernote)\n- [Facebook](https://github.com/jaredhanson/passport-facebook)\n- [FamilySearch](https://github.com/jaredhanson/passport-familysearch)\n- [Fitbit](https://github.com/jaredhanson/passport-fitbit)\n- [Flattr](https://github.com/freenerd/passport-flattr) by [Johan Uhle](https://github.com/freenerd)\n- [Flickr](https://github.com/johnnyhalife/passport-flickr) by [Johnny Halife](https://github.com/johnnyhalife)\n- [Force.com](https://github.com/joshbirk/passport-forcedotcom) (Salesforce, Database.com) by [Joshua Birk](https://github.com/joshbirk)\n- [Foursquare](https://github.com/jaredhanson/passport-foursquare)\n- [FreedomWorks](https://github.com/carlos8f/passport-freedomworks) by [Carlos Rodriguez](https://github.com/carlos8f)\n- [Geeklist](https://github.com/despekiroule/passport-geeklist) by [Sébastien De Bollivier](https://github.com/despekiroule)\n- [Geoloqi](https://github.com/jaredhanson/passport-geoloqi)\n- [GitHub](https://github.com/jaredhanson/passport-github)\n- [Goodreads](https://github.com/jaredhanson/passport-goodreads)\n- [Google](https://github.com/jaredhanson/passport-google) (OpenID)\n- [Google](https://github.com/jaredhanson/passport-google-oauth) (OAuth 1.0 and 2.0)\n- [Gowalla](https://github.com/jaredhanson/passport-gowalla)\n- [HackID](https://github.com/HackBerkeley/passport-hackid) by [Hackers @ Berkeley](https://github.com/HackBerkeley)\n- [Instagram](https://github.com/jaredhanson/passport-instagram)\n- [Intuit](https://github.com/jaredhanson/passport-intuit) (OpenID)\n- [Intuit](https://github.com/jaredhanson/passport-intuit-oauth) (OAuth 1.0)\n- [Justin.tv](https://github.com/jaredhanson/passport-justintv)\n- [LinkedIn](https://github.com/jaredhanson/passport-linkedin)\n- [me2day](https://github.com/outsideris/passport-me2day) by [JeongHoon Byun](https://github.com/outsideris)\n- [Meetup](https://github.com/jaredhanson/passport-meetup)\n- [Netflix](https://github.com/jaredhanson/passport-netflix)\n- [Odnoklassniki](https://github.com/ozon1234/passport-odnoklassniki) by [Alexey Kozlov](https://github.com/ozon1234)\n- [Ohloh](https://github.com/jaredhanson/passport-ohloh)\n- [OpenStreetMap](https://github.com/jaredhanson/passport-openstreetmap)\n- [PayPal](https://github.com/jaredhanson/passport-paypal) (OpenID)\n- [PayPal](https://github.com/jaredhanson/passport-paypal-oauth) (OAuth 2.0)\n- [picplz](https://github.com/jaredhanson/passport-picplz)\n- [Rdio](https://github.com/jaredhanson/passport-rdio)\n- [Readability](https://github.com/jaredhanson/passport-readability)\n- [RunKeeper](https://github.com/jaredhanson/passport-runkeeper)\n- [SmugMug](https://github.com/jaredhanson/passport-smugmug)\n- [SharePoint](https://github.com/QuePort/passport-sharepoint) by [QuePort](https://github.com/QuePort)\n- [SoundCloud](https://github.com/jaredhanson/passport-soundcloud)\n- [StatusNet](https://github.com/zoowar/passport-statusnet) by [ZooWar](https://github.com/zoowar)\n- [Steam](https://github.com/liamcurry/passport-steam) by [Liam Curry](https://github.com/liamcurry)\n- [SUPINFO](https://github.com/godezinc/passport-supinfo) by [Vincent PEYROUSE](https://github.com/GodezInc)\n- [Trade Me](https://github.com/Tumunu/passport-trademe) by [Tumunu](https://github.com/Tumunu)\n- [TripIt](https://github.com/jaredhanson/passport-tripit)\n- [Tumblr](https://github.com/jaredhanson/passport-tumblr)\n- [Twitter](https://github.com/jaredhanson/passport-twitter)\n- [TxSSC](https://github.com/TxSSC/passport-txssc) by [Texas School Safety Center](https://github.com/TxSSC)\n- [Urlship](https://github.com/urlship/passport-urlship) by [Urlship](https://github.com/urlship)\n- [Vimeo](https://github.com/jaredhanson/passport-vimeo)\n- [VKontakte](https://github.com/stevebest/passport-vkontakte) by [Stepan Stolyarov](https://github.com/stevebest)\n- [Windows Live](https://github.com/jaredhanson/passport-windowslive)\n- [Withings](https://github.com/mowens/passport-withings) by [Michael Owens](https://github.com/mowens)\n- [Yahoo!](https://github.com/jaredhanson/passport-yahoo) (OpenID)\n- [Yahoo!](https://github.com/jaredhanson/passport-yahoo-oauth) (OAuth 1.0)\n- [Yammer](https://github.com/jaredhanson/passport-yammer)\n- [Yandex](https://github.com/gurugray/passport-yandex) by [Sergey Sergeev](https://github.com/gurugray)\n- [Atlassian Crowd](https://bitbucket.org/knecht_andreas/passport-atlassian-crowd) by [Andreas Knecht](https://bitbucket.org/knecht_andreas)\n- [OpenSSO](https://github.com/oroce/passport-opensso) by [Róbert Oroszi](https://github.com/oroce)\n- [OpenAM](https://github.com/alesium/passport-openam) by [Alesium](https://github.com/alesium)\n- [Drupal](https://github.com/mixmarket/passport-drupal) by [Victor Kareh](https://github.com/vkareh) (for Drupal-powered sites using [OAuth Login Provider](http://drupal.org/project/oauthloginprovider) module)\n- [HTTP](https://github.com/jaredhanson/passport-http) (HTTP Basic and Digest schemes)\n- [HTTP-Bearer](https://github.com/jaredhanson/passport-http-bearer) (HTTP Bearer scheme)\n- [HTTP-OAuth](https://github.com/jaredhanson/passport-http-oauth) (HTTP OAuth scheme)\n- [OAuth2-Client-Password](https://github.com/jaredhanson/passport-oauth2-client-password) (OAuth 2.0 client password)\n- [Hash](https://github.com/yuri-karadzhov/passport-hash) (hash parameter) by [Yuri Karadzhov](https://github.com/yuri-karadzhov)\n- [Anonymous](https://github.com/jaredhanson/passport-anonymous)\n- [Dummy](https://github.com/developmentseed/passport-dummy) by [Development Seed](https://github.com/developmentseed)\n\n**Attention Developers:** If you implement a new authentication strategy for\nPassport, send me a message and I will update the list.\n\n## Tests\n\n    $ npm install --dev\n    $ make test\n\n[![Build Status](https://secure.travis-ci.org/jaredhanson/passport.png)](http://travis-ci.org/jaredhanson/passport)\n\n## Credits\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2011-2013 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>\n","_id":"passport@0.1.16","dist":{"shasum":"70e28b58370dbea83ed28afd8f276871f9e4ab92","tarball":"http://registry.npmjs.org/passport/-/passport-0.1.16.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"jaredhanson","email":"jaredhanson@gmail.com"},"maintainers":[{"name":"jaredhanson","email":"jaredhanson@gmail.com"}],"directories":{}},"0.1.17":{"name":"passport","version":"0.1.17","description":"Simple, unobtrusive authentication for Node.js.","keywords":["express","connect","auth","authn","authentication"],"homepage":"http://passportjs.org/","repository":{"type":"git","url":"git://github.com/jaredhanson/passport.git"},"bugs":{"url":"http://github.com/jaredhanson/passport/issues"},"author":{"name":"Jared Hanson","email":"jaredhanson@gmail.com","url":"http://www.jaredhanson.net/"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"}],"main":"./lib/passport","dependencies":{"pkginfo":"0.2.x","pause":"0.0.1"},"devDependencies":{"vows":"0.6.x"},"scripts":{"test":"NODE_PATH=lib node_modules/.bin/vows test/*-test.js test/**/*-test.js test/context/http/*-test.js"},"engines":{"node":">= 0.4.0"},"readme":"# Passport\n\nPassport is [Express](http://expressjs.com/)-compatible authentication\nmiddleware for [Node.js](http://nodejs.org/).\n\nPassport's sole purpose is to authenticate requests, which it does through an\nextensible set of plugins known as _strategies_.  Passport does not mount\nroutes or assume any particular database schema, which maximizes flexiblity and\nallows application-level decisions to be made by the developer.  The API is\nsimple: you provide Passport a request to authenticate, and Passport provides\nhooks for controlling what occurs when authentication succeeds or fails.\n\n## Install\n\n    $ npm install passport\n\n## Usage\n\n#### Strategies\n\nPassport uses the concept of strategies to authenticate requests.  Strategies\ncan range from verifying username and password credentials, delegated\nauthentication using [OAuth](http://oauth.net/) (for example, via [Facebook](http://www.facebook.com/)\nor [Twitter](http://twitter.com/)), or federated authentication using [OpenID](http://openid.net/).\n\nBefore authenticating requests, the strategy (or strategies) used by an\napplication must be configured.\n\n    passport.use(new LocalStrategy(\n      function(username, password, done) {\n        User.findOne({ username: username, password: password }, function (err, user) {\n          done(err, user);\n        });\n      }\n    ));\n\n#### Sessions\n\nPassport will maintain persistent login sessions.  In order for persistent\nsessions to work, the authenticated user must be serialized to the session, and\ndeserialized when subsequent requests are made.\n\nPassport does not impose any restrictions on how your user records are stored.\nInstead, you provide functions to Passport which implements the necessary\nserialization and deserialization logic.  In a typical application, this will be\nas simple as serializing the user ID, and finding the user by ID when\ndeserializing.\n\n    passport.serializeUser(function(user, done) {\n      done(null, user.id);\n    });\n\n    passport.deserializeUser(function(id, done) {\n      User.findById(id, function (err, user) {\n        done(err, user);\n      });\n    });\n\n#### Middleware\n\nTo use Passport in an [Express](http://expressjs.com/) or\n[Connect](http://senchalabs.github.com/connect/)-based application, configure it\nwith the required `passport.initialize()` middleware.  If your application uses\npersistent login sessions (recommended, but not required), `passport.session()`\nmiddleware must also be used.\n\n    app.configure(function() {\n      app.use(express.static(__dirname + '/../../public'));\n      app.use(express.cookieParser());\n      app.use(express.bodyParser());\n      app.use(express.session({ secret: 'keyboard cat' }));\n      app.use(passport.initialize());\n      app.use(passport.session());\n      app.use(app.router);\n    });\n\n#### Authenticate Requests\n\nPassport provides an `authenticate()` function, which is used as route\nmiddleware to authenticate requests.\n\n    app.post('/login', \n      passport.authenticate('local', { failureRedirect: '/login' }),\n      function(req, res) {\n        res.redirect('/');\n      });\n\n## Examples\n\nFor a complete, working example, refer to the [login example](https://github.com/jaredhanson/passport-local/tree/master/examples/login)\nincluded in [passport-local](https://github.com/jaredhanson/passport-local).\n\n## Strategies\n\nPassport has a comprehensive set of **over 120** authentication strategies\ncovering social networking, enterprise integration, API services, and more.\nThe [complete list](https://github.com/jaredhanson/passport/wiki/Strategies) is\navailable on the [wiki](https://github.com/jaredhanson/passport/wiki).\n\nThe following table lists commonly used strategies:\n\n|Strategy                                                       | Protocol                 |Developer                                       |\n|---------------------------------------------------------------|--------------------------|------------------------------------------------|\n|[Local](https://github.com/jaredhanson/passport-local)         | HTML form                |[Jared Hanson](https://github.com/jaredhanson)  |\n|[OpenID](https://github.com/jaredhanson/passport-openid)       | OpenID                   |[Jared Hanson](https://github.com/jaredhanson)  |\n|[BrowserID](https://github.com/jaredhanson/passport-browserid) | BrowserID                |[Jared Hanson](https://github.com/jaredhanson)  |\n|[Facebook](https://github.com/jaredhanson/passport-facebook)   | OAuth 2.0                |[Jared Hanson](https://github.com/jaredhanson)  |\n|[Google](https://github.com/jaredhanson/passport-google)       | OpenID                   |[Jared Hanson](https://github.com/jaredhanson)  |\n|[Google](https://github.com/jaredhanson/passport-google-oauth) | OAuth / OAuth 2.0        |[Jared Hanson](https://github.com/jaredhanson)  |\n|[Twitter](https://github.com/jaredhanson/passport-twitter)     | OAuth                    |[Jared Hanson](https://github.com/jaredhanson)  |\n\n## Related Modules\n\n- [Locomotive](https://github.com/jaredhanson/locomotive) — Powerful MVC web framework\n- [OAuthorize](https://github.com/jaredhanson/oauthorize) — OAuth service provider toolkit\n- [OAuth2orize](https://github.com/jaredhanson/oauth2orize) — OAuth 2.0 authorization server toolkit\n- [connect-ensure-login](https://github.com/jaredhanson/connect-ensure-login)  — middleware to ensure login sessions\n\nThe [modules](https://github.com/jaredhanson/passport/wiki/Modules) page on the\n[wiki](https://github.com/jaredhanson/passport/wiki) lists other useful modules\nthat build upon or integrate with Passport.\n\n## Tests\n\n    $ npm install --dev\n    $ make test\n\n[![Build Status](https://secure.travis-ci.org/jaredhanson/passport.png)](http://travis-ci.org/jaredhanson/passport)\n\n## Credits\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2011-2013 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>\n","_id":"passport@0.1.17","dist":{"shasum":"2cd503be0d35f33a9726d00ad2654786643a23fc","tarball":"http://registry.npmjs.org/passport/-/passport-0.1.17.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"jaredhanson","email":"jaredhanson@gmail.com"},"maintainers":[{"name":"jaredhanson","email":"jaredhanson@gmail.com"}],"directories":{}}},"maintainers":[{"name":"jaredhanson","email":"jaredhanson@gmail.com"}],"time":{"0.1.0":"2011-10-08T22:45:12.573Z","0.1.1":"2011-10-23T22:05:01.178Z","0.1.2":"2011-10-26T03:50:13.900Z","0.1.3":"2011-10-30T17:23:31.130Z","0.1.4":"2011-12-19T16:39:13.840Z","0.1.5":"2011-12-19T19:20:45.862Z","0.1.6":"2012-02-03T05:36:07.886Z","0.1.7":"2012-03-15T03:08:36.448Z","0.1.8":"2012-03-31T09:28:31.877Z","0.1.9":"2012-05-29T02:17:25.259Z","0.1.10":"2012-06-07T03:02:41.208Z","0.1.11":"2012-07-01T01:49:50.545Z","0.1.12":"2012-07-11T07:17:18.685Z","0.1.13":"2012-11-03T18:59:00.901Z","0.1.14":"2012-11-03T19:50:29.898Z","0.1.15":"2012-11-04T03:47:52.801Z","0.1.16":"2013-02-27T16:29:51.973Z","0.1.17":"2013-05-13T02:18:10.503Z"},"author":{"name":"Jared Hanson","email":"jaredhanson@gmail.com","url":"http://www.jaredhanson.net/"},"repository":{"type":"git","url":"git://github.com/jaredhanson/passport.git"},"users":{"fgribreau":true,"pid":true,"vincentmac":true,"bat":true,"ljharb":true,"leesei":true,"hfcorriez":true,"maxmaximov":true,"dbrockman":true,"kennethkl":true,"joliva":true,"tmaximini":true,"frankblizzard":true,"lexa":true,"denisix":true,"spekkionu":true},"_attachments":{"passport-0.1.17.tgz":{"content_type":"application/octet-stream","revpos":48,"digest":"md5-2Sexe0HdvRU/djvNdDms5g==","length":11370,"stub":true},"passport-0.1.16.tgz":{"content_type":"application/octet-stream","revpos":42,"digest":"md5-UneZgt9y/SYuco/CXD8UZg==","length":12509,"stub":true},"passport-0.1.15.tgz":{"content_type":"application/octet-stream","revpos":38,"digest":"md5-GPD/DhOOXKJfx2eHKcJsOA==","length":12198,"stub":true},"passport-0.1.14.tgz":{"content_type":"application/octet-stream","revpos":36,"digest":"md5-9B0qGcerzVMXhNBT3lHUiQ==","length":12233,"stub":true},"passport-0.1.13.tgz":{"content_type":"application/octet-stream","revpos":34,"digest":"md5-UiP1T57+qPhBgDO/jqlH5A==","length":12154,"stub":true},"passport-0.1.12.tgz":{"content_type":"application/octet-stream","revpos":27,"digest":"md5-5RsHzAAadEX0Q4wxVAbnuw==","length":9044,"stub":true},"passport-0.1.11.tgz":{"content_type":"application/octet-stream","revpos":25,"digest":"md5-7XN33pdQseb3MeL3GhN08A==","length":8336,"stub":true},"passport-0.1.10.tgz":{"content_type":"application/octet-stream","revpos":23,"digest":"md5-v4w7V5XtzqxvDt5swvT24Q==","length":7446,"stub":true},"passport-0.1.9.tgz":{"content_type":"application/octet-stream","revpos":21,"digest":"md5-wSQ4XS1BFYWhmoAhavh5gA==","length":7437,"stub":true},"passport-0.1.8.tgz":{"content_type":"application/octet-stream","revpos":19,"digest":"md5-vc7cwk6HWaPwTKZjErJt2Q==","length":7354,"stub":true},"passport-0.1.7.tgz":{"content_type":"application/octet-stream","revpos":17,"digest":"md5-RK4yCXFYPT5imlq3M4XaMQ==","length":7270,"stub":true},"passport-0.1.6.tgz":{"content_type":"application/octet-stream","revpos":15,"digest":"md5-I0TMH2qWLwKp0ISeafHhKw==","length":7013,"stub":true},"passport-0.1.5.tgz":{"content_type":"application/octet-stream","revpos":13,"digest":"md5-c50IpEUO6vM9PFI9a6zNrA==","length":10240,"stub":true},"passport-0.1.4.tgz":{"content_type":"application/octet-stream","revpos":11,"digest":"md5-MmjbXMYAnPbZA2OkfztP3w==","length":10240,"stub":true},"passport-0.1.3.tgz":{"content_type":"application/octet-stream","revpos":9,"digest":"md5-1TVD0nnSA2cqCI6UMoUkdg==","length":10240,"stub":true},"passport-0.1.2.tgz":{"content_type":"application/octet-stream","revpos":7,"digest":"md5-tm9+332lwFeSQjebvhoiEg==","length":10240,"stub":true},"passport-0.1.1.tgz":{"content_type":"application/octet-stream","revpos":5,"digest":"md5-n9U8YrFKIMRijrLbJ82iSg==","length":6336,"stub":true},"passport-0.1.0.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-tRy1WoiU1opirjNu8N/yEQ==","length":2092,"stub":true}},"_etag":"\"D0SQA3U3O8N8FLTWHVB7IR71R\""}